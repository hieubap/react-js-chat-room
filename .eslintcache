[{"D:\\project-react\\base-react\\src\\index.js":"1","D:\\project-react\\base-react\\src\\views\\oauth.js":"2","D:\\project-react\\base-react\\src\\redux\\index.js":"3","D:\\project-react\\base-react\\src\\layouts\\public\\index.js":"4","D:\\project-react\\base-react\\src\\views\\timegrid.js":"5","D:\\project-react\\base-react\\src\\utils\\common.js":"6","D:\\project-react\\base-react\\src\\layouts\\public\\styled.js":"7","D:\\project-react\\base-react\\src\\views\\routes.js":"8","D:\\project-react\\base-react\\src\\utils\\client-utils.js":"9","D:\\project-react\\base-react\\src\\redux\\models\\index.js":"10","D:\\project-react\\base-react\\src\\layouts\\header\\index.js":"11","D:\\project-react\\base-react\\src\\layouts\\header\\styled.js":"12","D:\\project-react\\base-react\\src\\layouts\\authorization\\index.js":"13","D:\\project-react\\base-react\\src\\views\\public\\home\\index.js":"14","D:\\project-react\\base-react\\src\\views\\public\\map\\index.js":"15","D:\\project-react\\base-react\\src\\views\\public\\chat\\index.js":"16","D:\\project-react\\base-react\\src\\redux\\models\\auth\\index.js":"17","D:\\project-react\\base-react\\src\\redux\\models\\post\\index.js":"18","D:\\project-react\\base-react\\src\\redux\\models\\cache\\index.js":"19","D:\\project-react\\base-react\\src\\redux\\models\\socket\\index.js":"20","D:\\project-react\\base-react\\src\\utils\\index.js":"21","D:\\project-react\\base-react\\src\\views\\public\\home\\styled.js":"22","D:\\project-react\\base-react\\src\\views\\public\\map\\MapComponent.js":"23","D:\\project-react\\base-react\\src\\views\\public\\chat\\styled.js":"24","D:\\project-react\\base-react\\src\\views\\public\\home\\components\\post.js":"25","D:\\project-react\\base-react\\src\\views\\public\\container\\create-room-modal.js":"26","D:\\project-react\\base-react\\src\\views\\public\\container\\login-modal.js":"27","D:\\project-react\\base-react\\src\\views\\public\\chat\\components\\message.js":"28","D:\\project-react\\base-react\\src\\redux\\models\\base-store.js":"29","D:\\project-react\\base-react\\src\\utils\\data-cache.js":"30","D:\\project-react\\base-react\\src\\data-access\\post-provider.js":"31","D:\\project-react\\base-react\\src\\data-access\\account-provider.js":"32","D:\\project-react\\base-react\\src\\data-access\\auth-provider.js":"33","D:\\project-react\\base-react\\src\\data-access\\room-provider.js":"34","D:\\project-react\\base-react\\src\\data-access\\file-provider.js":"35","D:\\project-react\\base-react\\src\\data-access\\message-provider.js":"36","D:\\project-react\\base-react\\src\\views\\public\\home\\components\\styled.js":"37","D:\\project-react\\base-react\\src\\views\\public\\home\\components\\input-comment.js":"38","D:\\project-react\\base-react\\src\\views\\public\\chat\\components\\modal.js":"39","D:\\project-react\\base-react\\src\\data-access\\base-provider.js":"40","D:\\project-react\\base-react\\src\\constants\\index.js":"41","D:\\project-react\\base-react\\src\\views\\public\\chat\\components\\styled.js":"42","D:\\project-react\\react-js-friend-chat\\src\\index.js":"43","D:\\project-react\\react-js-friend-chat\\src\\views\\oauth.js":"44","D:\\project-react\\react-js-friend-chat\\src\\redux\\index.js":"45","D:\\project-react\\react-js-friend-chat\\src\\layouts\\public\\index.js":"46","D:\\project-react\\react-js-friend-chat\\src\\views\\timegrid.js":"47","D:\\project-react\\react-js-friend-chat\\src\\utils\\common.js":"48","D:\\project-react\\react-js-friend-chat\\src\\layouts\\public\\styled.js":"49","D:\\project-react\\react-js-friend-chat\\src\\views\\routes.js":"50","D:\\project-react\\react-js-friend-chat\\src\\utils\\client-utils.js":"51","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\container\\login-modal.js":"52","D:\\project-react\\react-js-friend-chat\\src\\redux\\models\\index.js":"53","D:\\project-react\\react-js-friend-chat\\src\\layouts\\header\\index.js":"54","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\chat\\components\\modal.js":"55","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\chat\\index.js":"56","D:\\project-react\\react-js-friend-chat\\src\\layouts\\header\\styled.js":"57","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\home\\index.js":"58","D:\\project-react\\react-js-friend-chat\\src\\layouts\\authorization\\index.js":"59","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\setting\\index.js":"60","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\setting\\loginSecure\\index.js":"61","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\map\\index.js":"62","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\chat\\components\\styled.js":"63","D:\\project-react\\react-js-friend-chat\\src\\redux\\models\\cache\\index.js":"64","D:\\project-react\\react-js-friend-chat\\src\\redux\\models\\auth\\index.js":"65","D:\\project-react\\react-js-friend-chat\\src\\redux\\models\\device-info\\index.js":"66","D:\\project-react\\react-js-friend-chat\\src\\redux\\models\\socket\\index.js":"67","D:\\project-react\\react-js-friend-chat\\src\\redux\\models\\post\\index.js":"68","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\chat\\styled.js":"69","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\chat\\components\\message.js":"70","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\home\\styled.js":"71","D:\\project-react\\react-js-friend-chat\\src\\utils\\index.js":"72","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\setting\\styled.js":"73","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\container\\verify-modal.js":"74","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\setting\\loginSecure\\list.js":"75","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\setting\\loginSecure\\styled.js":"76","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\map\\MapComponent.js":"77","D:\\project-react\\react-js-friend-chat\\src\\data-access\\file-provider.js":"78","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\home\\components\\post.js":"79","D:\\project-react\\react-js-friend-chat\\src\\utils\\data-cache.js":"80","D:\\project-react\\react-js-friend-chat\\src\\data-access\\auth-provider.js":"81","D:\\project-react\\react-js-friend-chat\\src\\redux\\models\\base-store.js":"82","D:\\project-react\\react-js-friend-chat\\src\\data-access\\device-info-provider.js":"83","D:\\project-react\\react-js-friend-chat\\src\\redux\\models\\socket\\action.js":"84","D:\\project-react\\react-js-friend-chat\\src\\data-access\\room-provider.js":"85","D:\\project-react\\react-js-friend-chat\\src\\data-access\\message-provider.js":"86","D:\\project-react\\react-js-friend-chat\\src\\data-access\\account-provider.js":"87","D:\\project-react\\react-js-friend-chat\\src\\data-access\\post-provider.js":"88","D:\\project-react\\react-js-friend-chat\\src\\layouts\\sidebar\\index.js":"89","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\home\\components\\input-comment.js":"90","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\home\\components\\styled.js":"91","D:\\project-react\\react-js-friend-chat\\src\\data-access\\base-provider.js":"92","D:\\project-react\\react-js-friend-chat\\src\\constants\\index.js":"93","D:\\project-react\\react-js-friend-chat\\src\\layouts\\sidebar\\styled.js":"94"},{"size":1329,"mtime":1649035966613,"results":"95","hashOfConfig":"96"},{"size":473,"mtime":1648347370516,"results":"97","hashOfConfig":"96"},{"size":241,"mtime":1647966470728,"results":"98","hashOfConfig":"96"},{"size":887,"mtime":1648880611946,"results":"99","hashOfConfig":"96"},{"size":2210,"mtime":1648365907451,"results":"100","hashOfConfig":"96"},{"size":2927,"mtime":1648281144819,"results":"101","hashOfConfig":"96"},{"size":202,"mtime":1648393064749,"results":"102","hashOfConfig":"96"},{"size":785,"mtime":1649002759960,"results":"103","hashOfConfig":"96"},{"size":3117,"mtime":1648392950064,"results":"104","hashOfConfig":"96"},{"size":159,"mtime":1647969650653,"results":"105","hashOfConfig":"96"},{"size":1296,"mtime":1649002778289,"results":"106","hashOfConfig":"96"},{"size":896,"mtime":1648391103351,"results":"107","hashOfConfig":"96"},{"size":659,"mtime":1648225514975,"results":"108","hashOfConfig":"96"},{"size":2777,"mtime":1648393133121,"results":"109","hashOfConfig":"96"},{"size":1454,"mtime":1649003140814,"results":"110","hashOfConfig":"96"},{"size":9206,"mtime":1649001817170,"results":"111","hashOfConfig":"96"},{"size":2497,"mtime":1649001912246,"results":"112","hashOfConfig":"96"},{"size":589,"mtime":1647969634591,"results":"113","hashOfConfig":"96"},{"size":286,"mtime":1647967858843,"results":"114","hashOfConfig":"96"},{"size":10456,"mtime":1649002052880,"results":"115","hashOfConfig":"96"},{"size":477,"mtime":1647966470731,"results":"116","hashOfConfig":"96"},{"size":650,"mtime":1648044738436,"results":"117","hashOfConfig":"96"},{"size":1753,"mtime":1649035989490,"results":"118","hashOfConfig":"96"},{"size":11584,"mtime":1649000806500,"results":"119","hashOfConfig":"96"},{"size":8930,"mtime":1648226571873,"results":"120","hashOfConfig":"96"},{"size":2795,"mtime":1648997330543,"results":"121","hashOfConfig":"96"},{"size":7304,"mtime":1648282925723,"results":"122","hashOfConfig":"96"},{"size":3851,"mtime":1648957968210,"results":"123","hashOfConfig":"96"},{"size":2501,"mtime":1647970291862,"results":"124","hashOfConfig":"96"},{"size":921,"mtime":1647966470731,"results":"125","hashOfConfig":"96"},{"size":138,"mtime":1647969552522,"results":"126","hashOfConfig":"96"},{"size":1005,"mtime":1647968064549,"results":"127","hashOfConfig":"96"},{"size":1512,"mtime":1649001907962,"results":"128","hashOfConfig":"96"},{"size":1129,"mtime":1647795047433,"results":"129","hashOfConfig":"96"},{"size":498,"mtime":1647966470726,"results":"130","hashOfConfig":"96"},{"size":141,"mtime":1647969540927,"results":"131","hashOfConfig":"96"},{"size":3583,"mtime":1648225814306,"results":"132","hashOfConfig":"96"},{"size":746,"mtime":1647970606021,"results":"133","hashOfConfig":"96"},{"size":499,"mtime":1647762662343,"results":"134","hashOfConfig":"96"},{"size":1640,"mtime":1648226646165,"results":"135","hashOfConfig":"96"},{"size":171,"mtime":1647969560173,"results":"136","hashOfConfig":"96"},{"size":866,"mtime":1648997212018,"results":"137","hashOfConfig":"96"},{"size":1350,"mtime":1649349148924,"results":"138","hashOfConfig":"139"},{"size":473,"mtime":1649344533357,"results":"140","hashOfConfig":"139"},{"size":241,"mtime":1649343661999,"results":"141","hashOfConfig":"139"},{"size":1257,"mtime":1649344533350,"results":"142","hashOfConfig":"139"},{"size":2210,"mtime":1649344533421,"results":"143","hashOfConfig":"139"},{"size":6306,"mtime":1649344533356,"results":"144","hashOfConfig":"139"},{"size":202,"mtime":1649344533351,"results":"145","hashOfConfig":"139"},{"size":1133,"mtime":1649344533421,"results":"146","hashOfConfig":"139"},{"size":3131,"mtime":1649344533356,"results":"147","hashOfConfig":"139"},{"size":7304,"mtime":1649344533359,"results":"148","hashOfConfig":"139"},{"size":212,"mtime":1649344533354,"results":"149","hashOfConfig":"139"},{"size":1375,"mtime":1649344533350,"results":"150","hashOfConfig":"139"},{"size":499,"mtime":1649344533358,"results":"151","hashOfConfig":"139"},{"size":12586,"mtime":1649344533358,"results":"152","hashOfConfig":"139"},{"size":911,"mtime":1649344533350,"results":"153","hashOfConfig":"139"},{"size":2722,"mtime":1649344533361,"results":"154","hashOfConfig":"139"},{"size":659,"mtime":1649344533349,"results":"155","hashOfConfig":"139"},{"size":634,"mtime":1649344533419,"results":"156","hashOfConfig":"139"},{"size":2071,"mtime":1649344533420,"results":"157","hashOfConfig":"139"},{"size":2314,"mtime":1649344533419,"results":"158","hashOfConfig":"139"},{"size":893,"mtime":1649344533358,"results":"159","hashOfConfig":"139"},{"size":363,"mtime":1649344533353,"results":"160","hashOfConfig":"139"},{"size":2807,"mtime":1649344533352,"results":"161","hashOfConfig":"139"},{"size":1968,"mtime":1649344533353,"results":"162","hashOfConfig":"139"},{"size":9735,"mtime":1649344533355,"results":"163","hashOfConfig":"139"},{"size":666,"mtime":1649344533354,"results":"164","hashOfConfig":"139"},{"size":14284,"mtime":1649344533359,"results":"165","hashOfConfig":"139"},{"size":4623,"mtime":1649344533358,"results":"166","hashOfConfig":"139"},{"size":650,"mtime":1649344533361,"results":"167","hashOfConfig":"139"},{"size":477,"mtime":1649344533356,"results":"168","hashOfConfig":"139"},{"size":192,"mtime":1649344533420,"results":"169","hashOfConfig":"139"},{"size":4458,"mtime":1649344533360,"results":"170","hashOfConfig":"139"},{"size":974,"mtime":1649344533420,"results":"171","hashOfConfig":"139"},{"size":1297,"mtime":1649344533420,"results":"172","hashOfConfig":"139"},{"size":2740,"mtime":1649344533362,"results":"173","hashOfConfig":"139"},{"size":498,"mtime":1649344533347,"results":"174","hashOfConfig":"139"},{"size":8930,"mtime":1649344533360,"results":"175","hashOfConfig":"139"},{"size":921,"mtime":1649343662007,"results":"176","hashOfConfig":"139"},{"size":1589,"mtime":1649344533346,"results":"177","hashOfConfig":"139"},{"size":2531,"mtime":1649344533352,"results":"178","hashOfConfig":"139"},{"size":495,"mtime":1649344533347,"results":"179","hashOfConfig":"139"},{"size":2208,"mtime":1649344533354,"results":"180","hashOfConfig":"139"},{"size":1206,"mtime":1649344533348,"results":"181","hashOfConfig":"139"},{"size":218,"mtime":1649344533348,"results":"182","hashOfConfig":"139"},{"size":1082,"mtime":1649344533346,"results":"183","hashOfConfig":"139"},{"size":215,"mtime":1649344533348,"results":"184","hashOfConfig":"139"},{"size":1057,"mtime":1649344533351,"results":"185","hashOfConfig":"139"},{"size":746,"mtime":1649344533360,"results":"186","hashOfConfig":"139"},{"size":3583,"mtime":1649344533361,"results":"187","hashOfConfig":"139"},{"size":1668,"mtime":1649344533347,"results":"188","hashOfConfig":"139"},{"size":202,"mtime":1649344533346,"results":"189","hashOfConfig":"139"},{"size":500,"mtime":1649344533351,"results":"190","hashOfConfig":"139"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},"xbcka3",{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"197"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"197"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"197"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"197"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"197"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"197"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"197"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"197"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"197"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"197"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"197"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"197"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"197"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"197"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"197"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"197"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"197"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"197"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"197"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"197"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"197"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"197"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fsrr1r",{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\project-react\\base-react\\src\\index.js",["413"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport stores from \"./redux\";\r\nimport \"./style.scss\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// import \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\nimport PublicLayout from \"@layouts/public\";\r\n\r\nimport Oauth from \"./views/oauth\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\nconst Root = () => {\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position={toast.POSITION.BOTTOM_RIGHT}\r\n        autoClose={5000}\r\n      ></ToastContainer>\r\n      <Provider store={stores}>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route exact path=\"/sso\" render={(props) => <Oauth {...props} />} />\r\n            <Route path=\"/p\" render={(props) => <PublicLayout {...props} />} />\r\n            {/* <Redirect to=\"/p/home\" /> */}\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nReactDOM.render(<Root />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n","D:\\project-react\\base-react\\src\\views\\oauth.js",["414"],"import { parseUrlParams } from \"@src/utils/common\";\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TimeGrid from \"./timegrid\";\r\n\r\nconst Oauth = ({ onLogin }) => {\r\n  useEffect(() => {\r\n    const param = parseUrlParams();\r\n    console.log(param, \"param\");\r\n    onLogin(param);\r\n  }, []);\r\n\r\n  return <TimeGrid>OAUTH</TimeGrid>;\r\n};\r\n\r\nexport default connect(\r\n  () => ({}),\r\n  ({ auth: { onLogin } }) => ({ onLogin })\r\n)(Oauth);\r\n",["415","416"],"D:\\project-react\\base-react\\src\\redux\\index.js",[],"D:\\project-react\\base-react\\src\\layouts\\public\\index.js",["417"],"import { routes_public } from \"@views/routes\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport Header from \"../header\";\r\nimport { WrapperLayoutPublic } from \"./styled\";\r\n\r\nconst Public = () => {\r\n  const { connect } = useDispatch().socket;\r\n  const { auth } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    if (auth?.userId) {\r\n      console.log(auth,'auth');\r\n      connect();\r\n    }\r\n  }, [auth]);\r\n\r\n  return (\r\n    <WrapperLayoutPublic>\r\n      <Header></Header>\r\n      <div className=\"main-content\">\r\n        <Switch>\r\n          {routes_public.map((item, index) => (\r\n            <Route key={index} path={item.path} component={item.component} />\r\n          ))}\r\n        </Switch>\r\n      </div>\r\n    </WrapperLayoutPublic>\r\n  );\r\n};\r\n\r\nexport default Public;\r\n","D:\\project-react\\base-react\\src\\views\\timegrid.js",["418","419","420"],"// JavaScript library that creates a callendar with events\r\nimport { Calendar } from \"@fullcalendar/core\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\n\r\nconst TimeGrid = ({\r\n  listSchedule = [\r\n    { day: \"2022-3-28\", startAt: \"6:45\", endAt: \"9:10\" },\r\n    { day: \"2022-3-28\", startAt: \"12:30\", endAt: \"14:55\" },\r\n    { day: \"2022-3-29\", startAt: \"10:15\", endAt: \"11:45\" },\r\n    { day: \"2022-3-29\", startAt: \"12:30\", endAt: \"14:55\" },\r\n  ],\r\n  ngayKhaiGiang,\r\n}) => {\r\n  const refs = useRef();\r\n  const [state, setState] = useState({});\r\n  useEffect(() => {\r\n    createCalendar();\r\n  }, [listSchedule]);\r\n\r\n  const createCalendar = () => {\r\n    const calendar = new Calendar(refs.current, {\r\n      plugins: [timeGridPlugin],\r\n      events: (listSchedule || []).map((item, index) => {\r\n        return {\r\n          id: index,\r\n          start: moment(\r\n            moment(item.day, \"YYYY-MM-DD HH:mm:ss\").format(\"YYYY-MM-DD \") +\r\n              item.startAt,\r\n            \"YYYY-MM-DD HH:mm:ss\"\r\n          ).format(\"yyyy-MM-DD HH:mm:ss\"),\r\n          end: moment(\r\n            moment(item.day, \"YYYY-MM-DD HH:mm:ss\").format(\"YYYY-MM-DD \") +\r\n              item.endAt,\r\n            \"YYYY-MM-DD HH:mm:ss\"\r\n          ).format(\"yyyy-MM-DD HH:mm:ss\"),\r\n          backgroundColor: \"var(--red)\",\r\n          borderColor: \"var(--red)\",\r\n        };\r\n      }),\r\n      //   dayHeaderContent: (date) =>\r\n      //     constants.day[date.dow].label + \" \" + moment(date.date).format(\"DD/MM\"),\r\n      // dayCellContent: (a, b, c, d) => \"\",\r\n      // firstDay: 1,\r\n      allDaySlot: null,\r\n      slotDuration: \"01:00:00\",\r\n      headerToolbar: {\r\n        left: \"\",\r\n        end: \"today prev,next\",\r\n      },\r\n      eventTimeFormat: {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n        hour12: false,\r\n      },\r\n      //   initialDate: new Date(ngayKhaiGiang),\r\n      // slotLabelContent: (a) => {\r\n      // },\r\n      height: \"400px\",\r\n      slotMinTime: \"06:00\",\r\n      slotMaxTime: \"22:00\",\r\n    });\r\n    calendar.render();\r\n  };\r\n  return <div className=\"calendar\" ref={refs}></div>;\r\n};\r\n\r\nexport default TimeGrid;\r\n","D:\\project-react\\base-react\\src\\utils\\common.js",["421","422"],"import moment from \"moment\";\r\nimport clientUtils from \"./client-utils\";\r\n\r\nconst parseUrlParams = () => {\r\n  const { search } = window.location;\r\n  const arrParam = search.slice(1).split(\"&\");\r\n  const param = {};\r\n  for (let i = 0; i < arrParam.length; i++) {\r\n    const pair = arrParam[i].split(\"=\");\r\n    param[pair[0]] = pair[1];\r\n  }\r\n  return param;\r\n};\r\n\r\nconst combineUrlParams = (url = \"\", params = {}) => {\r\n  const keys = Object.keys(params);\r\n  const paramUrl = keys\r\n    .reduce(\r\n      (result, key) =>\r\n        params[key] !== undefined && params[key] !== null && params[key] !== \"\"\r\n          ? [...result, `${key}=${params[key]}`]\r\n          : [...result],\r\n      []\r\n    )\r\n    .join(\"&\");\r\n  return `${url}?${paramUrl}`;\r\n};\r\n\r\nconst timeFromNow = (fromDate, format) => {\r\n  const date = new Date(fromDate);\r\n  const fy = date.getFullYear();\r\n  const fM = date.getMonth();\r\n  const fd = date.getDay();\r\n  const fh = date.getHours();\r\n  const fm = date.getMinutes();\r\n  const fs = date.getSeconds();\r\n\r\n  const now = new Date();\r\n  const ny = now.getFullYear();\r\n  const nM = now.getMonth();\r\n  const nd = now.getDay();\r\n  const nh = now.getHours();\r\n  const nm = now.getMinutes();\r\n  const ns = now.getSeconds();\r\n\r\n  if (ny - fy > 0) return `${ny - fy} năm trước`;\r\n  if (nM - fM > 0) return `${nM - fM} tháng trước`;\r\n  if (nd - fd > 0) return `${nd - fd} ngày trước`;\r\n  if (nh - fh > 0) return `${nh - fh} giờ trước`;\r\n  if (nm - fm > 0) return `${nm - fm} phút trước`;\r\n  if (ns - fs > 0) return `${ns - fs} giây trước`;\r\n};\r\n\r\nexport const momentFromNow = (m) => {\r\n  const date = moment(m);\r\n  const fy = date.year();\r\n  const fM = date.month();\r\n  const fd = date.day();\r\n  const fh = date.hour();\r\n  const fm = date.minute();\r\n  const fs = date.second();\r\n\r\n  const now = moment();\r\n  const ny = now.year();\r\n  const nM = now.month();\r\n  const nd = now.day();\r\n  const nh = now.hour();\r\n  const nm = now.minute();\r\n  const ns = now.second();\r\n\r\n  if (ny - fy > 0) return `${ny - fy} năm`;\r\n  if (nM - fM > 0) return `${nM - fM} tháng`;\r\n  if (nd - fd > 0) return `${nd - fd} ngày`;\r\n  if (nh - fh > 0) return `${nh - fh} giờ`;\r\n  if (nm - fm > 0) return `${nm - fm} phút`;\r\n  if (ns - fs > 0) return `${ns - fs} giây`;\r\n};\r\n\r\nexport const getImg = (avatar) => {\r\n  return avatar\r\n    ? `${clientUtils.serverApi}/files/${avatar}`\r\n    : \"https://static.toiimg.com/photo/82343395.cms\";\r\n};\r\n\r\nNumber.prototype.formatPrice = function () {\r\n  return this.toFixed(2)\r\n    .replace(/(\\d)(?=(\\d{3})+\\.)/g, \"$1,\")\r\n    .replace(\".00\", \"\")\r\n    .replace(/,/g, \".\");\r\n};\r\nString.prototype.formatPrice = function () {\r\n  try {\r\n    return parseInt(this)\r\n      .toFixed(2)\r\n      .replace(/(\\d)(?=(\\d{3})+\\.)/g, \"$1,\")\r\n      .replace(\".00\", \"\")\r\n      .replace(/,/g, \".\");\r\n  } catch (error) {}\r\n  return this;\r\n};\r\n\r\nexport { combineUrlParams, parseUrlParams, timeFromNow };\r\n","D:\\project-react\\base-react\\src\\layouts\\public\\styled.js",[],"D:\\project-react\\base-react\\src\\views\\routes.js",[],"D:\\project-react\\base-react\\src\\utils\\client-utils.js",["423","424"],"export const UrlServer = () => {\r\n  const domain = global.origin;\r\n  const localhost = true;\r\n\r\n  // switch (domain) {\r\n  //   case \"http://45.13.132.247:1234\": // server host\r\n  //     return \"http://45.13.132.247:8082\";\r\n  //   case \"http://localhost:3000\": // localhost\r\n  //     return localhost ? \"http://localhost:8880\" : \"http://45.13.132.247:8800\";\r\n  // }\r\n  return localhost ? \"http://localhost:8800\" : \"http://45.13.132.247:8800\";\r\n};\r\n\r\nexport default {\r\n  auth: \"\",\r\n  serverApi: UrlServer(),\r\n  requestApi(methodType, url, body, ignoreAuth) {\r\n    return new Promise((resolve, reject) => {\r\n      if (!body) body = {};\r\n      if (methodType.toLowerCase() !== \"get\") {\r\n        body = JSON.stringify(body);\r\n      }\r\n      this.requestFetch(\r\n        methodType,\r\n        url && url.indexOf(\"http\") === 0 ? url : url,\r\n        ignoreAuth\r\n          ? {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            }\r\n          : {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: this.auth,\r\n            },\r\n        body\r\n      )\r\n        .then((s) => {\r\n          s.json()\r\n            .then((val) => {\r\n              if (val.code === 401) {\r\n                // localStorage.clear();\r\n                // window.location.href = \"/auth/login\";\r\n              }\r\n              resolve(val);\r\n            })\r\n            .catch((e) => {\r\n              reject(e);\r\n            });\r\n        })\r\n        .catch((e) => {\r\n          if (e && e.status === 401) {\r\n            localStorage.clear();\r\n            // window.location.href = \"/auth/login\";\r\n          }\r\n          reject(e);\r\n        });\r\n    });\r\n  },\r\n  requestFetch(methodType, url, headers, body) {\r\n    return new Promise((resolve, reject) => {\r\n      let fetchParam = {\r\n        method: methodType,\r\n        headers,\r\n      };\r\n\r\n      if (methodType.toLowerCase() !== \"get\") {\r\n        fetchParam.body = body;\r\n      }\r\n      return fetch(UrlServer() + url, fetchParam)\r\n        .then((json) => {\r\n          if (!json.ok) {\r\n            reject(json);\r\n          } else resolve(json);\r\n        })\r\n        .catch((e) => {\r\n          reject(e);\r\n        });\r\n    });\r\n  },\r\n  upload(methodType, url, form) {\r\n    return new Promise((resolve, reject) => {\r\n      return this.requestFetch(\r\n        methodType,\r\n        url && url.indexOf(\"http\") === 0 ? url : url,\r\n        {\r\n          Authorization: this.auth,\r\n        },\r\n        form\r\n      )\r\n        .then((s) => {\r\n          s.json()\r\n            .then((val) => {\r\n              if (val.code === 401) {\r\n                localStorage.clear();\r\n                // window.location.href = \"/auth/login\";\r\n              }\r\n              resolve(val);\r\n            })\r\n            .catch((e) => {\r\n              reject(e);\r\n            });\r\n        })\r\n        .catch((e) => {\r\n          if (e && e.status === 401) {\r\n            localStorage.clear();\r\n            // window.location.href = \"/auth/login\";\r\n          }\r\n          reject(e);\r\n        });\r\n    });\r\n  },\r\n};\r\n","D:\\project-react\\base-react\\src\\redux\\models\\index.js",[],"D:\\project-react\\base-react\\src\\layouts\\header\\index.js",[],"D:\\project-react\\base-react\\src\\layouts\\header\\styled.js",[],"D:\\project-react\\base-react\\src\\layouts\\authorization\\index.js",[],"D:\\project-react\\base-react\\src\\views\\public\\home\\index.js",["425","426","427","428"],"// import \"@assets/css/font-awesome.css\";\r\nimport Post from \"./components/post\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { WrapperStyled } from \"./styled\";\r\nimport AuthModal from \"../container/login-modal\";\r\n\r\nconst Home = ({ auth, getUser, getlistBaiViet, listBaiViet, updateData }) => {\r\n  const [state, _setState] = useState({\r\n    showModalPost: false,\r\n  });\r\n  const setState = (data) => {\r\n    _setState((pre) => ({ ...pre, ...data }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getlistBaiViet({ size: 20 });\r\n    // getUser();\r\n  }, []);\r\n\r\n  return (\r\n    <WrapperStyled>\r\n      <AuthModal />\r\n      <div className=\"container__adver-left\">\r\n        <a href=\"\" className=\"container__adver-link\">\r\n          <img\r\n            src={require(\"@assets/images/qc2.png\").default}\r\n            alt=\"\"\r\n            className=\"container__adver-img\"\r\n          />\r\n        </a>\r\n      </div>\r\n      <div className=\"container__body\">\r\n        <div className=\"container__body--main\">\r\n          {auth && auth.type === 2 && (\r\n            <button\r\n              className=\"container__body--postbtn js-container__body--postbtn\"\r\n              onClick={() => {\r\n                setState({ showModalPost: true });\r\n              }}\r\n            >\r\n              Bạn đang nghĩ gì?\r\n            </button>\r\n          )}\r\n          {[1, 2, 3].map((item, idx) => (\r\n            <Post\r\n              key={idx}\r\n              onEdit={() => {\r\n                updateData({ _dataEdit: item });\r\n                setState({ showModalPost: true });\r\n              }}\r\n              {...item}\r\n            />\r\n          ))}\r\n          {(listBaiViet || []).length === 0 && (\r\n            <div>Không tìm thấy kết quả</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"container__adver-right\">\r\n        <a href=\"\" className=\"container__adver-link\">\r\n          <img\r\n            src={require(\"@assets/images/qc2.png\").default}\r\n            alt=\"\"\r\n            className=\"container__adver-img\"\r\n          />\r\n        </a>\r\n      </div>\r\n      {/* {state.showModalPost && (\r\n        <ModalCreatePost\r\n          onClose={() => {\r\n            setState({ showModalPost: false });\r\n            updateData({ _dataEdit: {} });\r\n          }}\r\n          afterPost={() => {\r\n            setState({ showModalPost: false });\r\n            getlistBaiViet();\r\n          }}\r\n        />\r\n      )} */}\r\n    </WrapperStyled>\r\n  );\r\n};\r\nexport default connect(\r\n  ({ auth: { auth }, post: { listData: listBaiViet = [] } }) => ({\r\n    auth,\r\n    listBaiViet,\r\n  }),\r\n  ({\r\n    post: { search: getlistBaiViet, updateData },\r\n    // account: { getUser },\r\n  }) => ({\r\n    getlistBaiViet,\r\n    updateData,\r\n    // getUser,\r\n  })\r\n)(Home);\r\n","D:\\project-react\\base-react\\src\\views\\public\\map\\index.js",["429"],"import L from \"leaflet\";\r\nimport React, { useCallback, useRef, useState } from \"react\";\r\nimport \"react-leaflet-markercluster/dist/styles.min.css\";\r\nimport MapComponent from \"./MapComponent\";\r\nimport \"./styles.scss\";\r\n\r\nconst MapWrapper = () => {\r\n  const center = [15.8828276, 107.590866];\r\n  const refGeoJson = useRef();\r\n  const map = useRef();\r\n  // const [map, setMap] = useState();\r\n  const [state, _setState] = useState({\r\n    geoData: [],\r\n    showLeftBottom: true,\r\n  });\r\n  const setState = (data) => {\r\n    _setState((pre) => ({ ...pre, ...data }));\r\n  };\r\n\r\n  const onVisiblePopup = useCallback(({ item, ...data }) => {\r\n    setState(data);\r\n    map?.current?.panTo(new L.LatLng(item.toaDo[0], item.toaDo[1]));\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ height: document.body.clientHeight, display: \"flex\" }}>\r\n      <div\r\n        className=\"custom-markercluster-map\"\r\n        style={{\r\n          height: \"100%\",\r\n          width: state.scope ? \"80%\" : \"100%\",\r\n          position: \"relative\",\r\n          transition: \"all .4s ease\",\r\n        }}\r\n      >\r\n        <MapComponent\r\n          dataPoints={state.dataPoints}\r\n          checks={state.checks}\r\n          map={map}\r\n          refGeoJson={refGeoJson}\r\n          onVisiblePopup={onVisiblePopup}\r\n          visibleCircle={state.scope}\r\n          centerFocus={state.centerFocus}\r\n          range={state.range}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapWrapper;\r\n","D:\\project-react\\base-react\\src\\views\\public\\chat\\index.js",["430","431","432","433","434","435","436","437","438","439","440","441","442","443"],"import { momentFromNow } from \"@src/utils/common\";\r\nimport { getImg } from \"@utils/common\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Message from \"./components/message\";\r\nimport AuthModal from \"../container/login-modal\";\r\nimport { WrapperStyled } from \"./styled\";\r\nimport CreateRoomModal from \"../container/create-room-modal\";\r\n\r\nconst ChatContainer = ({\r\n  auth,\r\n  listRoom,\r\n  listMessage,\r\n  listAllUser,\r\n  currentRoomId,\r\n  currentRoom,\r\n  createRoom,\r\n  getAllUser,\r\n  addUser,\r\n  updateData,\r\n  sendMessage,\r\n  getListMessage,\r\n  changeAvatar,\r\n}) => {\r\n  const [state, _setState] = useState({ content: \"\" });\r\n  const setState = (data) => {\r\n    _setState((pre) => ({ ...pre, ...data }));\r\n  };\r\n  useEffect(() => {\r\n    getAllUser();\r\n  }, []);\r\n  const handleCreate = () => {\r\n    createRoom();\r\n  };\r\n  const handleAddUser = (idUser) => () => {\r\n    addUser(idUser);\r\n  };\r\n  const selectRoom = (room) => () => {\r\n    updateData({ currentRoomId: room?.id, currentRoom: room });\r\n    getListMessage(room?.id);\r\n  };\r\n  return (\r\n    <WrapperStyled>\r\n      <div className=\"main-left\">\r\n        <div className=\"room-header\">\r\n          <div className=\"room-header-title\">Chat</div>\r\n          <div className=\"room-header-top\">\r\n            <div className=\"room-header-top-img\">\r\n              <label htmlFor=\"upload-avatar\">\r\n                <img src={getImg(auth?.image)} />\r\n              </label>\r\n            </div>\r\n            <div className=\"room-header-top-name\">{auth?.full_name}</div>\r\n            <input\r\n              id=\"upload-avatar\"\r\n              type=\"file\"\r\n              onChange={(e) => {\r\n                const [file] = e.target.files;\r\n                changeAvatar(file);\r\n              }}\r\n            />\r\n            <i\r\n              class=\"fa-solid fa-pen-to-square\"\r\n              onClick={() => {\r\n                setState({ createRoom: true });\r\n              }}\r\n            ></i>\r\n          </div>\r\n        </div>\r\n        <div className=\"room-group\">\r\n          {listRoom.map((item, idx) => (\r\n            <div key={idx} className=\"room-item\" onClick={selectRoom(item)}>\r\n              <div className=\"room-item-img\">\r\n                <img src={getImg(item?.admin?.avatar)} />\r\n              </div>\r\n              <div className=\"room-item-content\">\r\n                <div className=\"room-item-content-user\">Room {item.id}</div>\r\n                <div className=\"room-item-content-message\">\r\n                  {item?.lastMessage?.fullName && (\r\n                    <span>\r\n                      {item?.lastMessage?.fullName?.substring(\r\n                        item?.lastMessage?.fullName.length - 5\r\n                      )}\r\n                      :{\" \"}\r\n                    </span>\r\n                  )}\r\n                  <span>{item?.lastMessage?.content} </span>\r\n                  <span>\r\n                    . {item.createdAt && momentFromNow(item.createdAt)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"main-center\">\r\n        <div className=\"main-center-top\">\r\n          <div className=\"main-center-top-img\">\r\n            <img src={getImg(currentRoom?.avatar)} />\r\n          </div>\r\n          <div className=\"main-center-top-name\">{currentRoom?.id}</div>\r\n        </div>\r\n        <div className=\"main-center-mid\">\r\n          <div id=\"id-content-chat-message\" className=\"content-message\">\r\n            {listMessage.map((item, idx) => (\r\n              <Message\r\n                key={idx}\r\n                data={item}\r\n                front={listMessage[idx - 1]?.fromId === item.fromId}\r\n                end={listMessage[idx + 1]?.fromId === item.fromId}\r\n                numberLike={listMessage[idx + 1]?.numberLike}\r\n                listMessage={listMessage}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"main-center-bottom\">\r\n          <div className=\"bottom-tools\">\r\n            <div className=\"bottom-tools-item\">+</div>\r\n            <div className=\"bottom-tools-item\">+</div>\r\n            <div className=\"bottom-tools-item\">+</div>\r\n            <div className=\"bottom-tools-item\">+</div>\r\n          </div>\r\n          <div className=\"bottom-input-message\">\r\n            <input\r\n              // contentEditable=\"true\"\r\n\r\n              placeholder=\"Aa\"\r\n              value={state.content}\r\n              onKeyDown={(e) => {\r\n                if (e.key == \"Enter\") {\r\n                  sendMessage({ content: state.content });\r\n                  setState({ content: \"\" });\r\n                }\r\n              }}\r\n              onChange={(e) => setState({ content: e.target?.value })}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"main-right\">\r\n        <div className=\"main-right-header\">\r\n          <div className=\"main-center-top-img\">\r\n            <img src=\"https://akisa.vn/uploads/plugin/product_items/13551/mau-biet-thu-nha-dep-2-tang-hien-dai-bt21377-v2.jpg\" />\r\n          </div>\r\n          <div className=\"main-right-header-name\">Nhóm học thêm</div>\r\n        </div>\r\n        <div className=\"main-right-body\">\r\n          <div className=\"collapse-tool-title\">Xem thành viên nhóm</div>\r\n          {currentRoomId && (\r\n            <div className=\"list-user\">\r\n              <div\r\n                className=\"list-user-item\"\r\n                // onClick={handleAddUser(item.id)}\r\n              >\r\n                <div className=\"list-user-item-img\">\r\n                  <img src={getImg(currentRoom?.admin?.avatar)} />\r\n                </div>\r\n                <div className=\"list-user-item-content\">\r\n                  <div className=\"list-user-item-content-user\">\r\n                    {currentRoom?.admin?.fullName}\r\n                  </div>\r\n                  <div className=\"list-user-item-content-message\">\r\n                    <span>Quản trị viên</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {currentRoom?.connectedUsers?.map((item, key) => (\r\n                <div\r\n                  key={key}\r\n                  className=\"list-user-item\"\r\n                  // onClick={handleAddUser(item.id)}\r\n                >\r\n                  <div className=\"list-user-item-img\">\r\n                    <img src={getImg(item?.avatar)} />\r\n                  </div>\r\n                  <div className=\"list-user-item-content\">\r\n                    <div className=\"list-user-item-content-user\">\r\n                      {item.fullName}\r\n                    </div>\r\n                    <div className=\"list-user-item-content-message\">\r\n                      <span></span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n              <div className=\"list-user-item\">\r\n                <div className=\"list-user-item-img\">\r\n                  <i class=\"fa-solid fa-plus\"></i>\r\n                  {/* <img src=\"https://akisa.vn/uploads/plugin/product_items/13551/mau-biet-thu-nha-dep-2-tang-hien-dai-bt21377-v2.jpg\" /> */}\r\n                </div>\r\n                <div className=\"list-user-item-content\">\r\n                  <div className=\"list-user-item-content-user\">\r\n                    Thêm thành viên\r\n                  </div>\r\n                  <div className=\"list-user-item-content-message\">\r\n                    <span></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* <div className=\"collapse-tool-title\">Thêm thành viên nhóm</div>\r\n          {currentRoomId && (\r\n            <div className=\"list-user\">\r\n              {listAllUser.map((item, key) => (\r\n                <div\r\n                  key={key}\r\n                  className=\"list-user-item\"\r\n                  onClick={handleAddUser(item.id)}\r\n                >\r\n                  <div className=\"list-user-item-img\">\r\n                    <img src={getImg(item?.avatar)} />\r\n                  </div>\r\n                  <div className=\"list-user-item-content\">\r\n                    <div className=\"list-user-item-content-user\">\r\n                      {item.fullName}\r\n                    </div>\r\n                    <div className=\"list-user-item-content-message\">\r\n                      <span></span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )} */}\r\n        </div>\r\n      </div>\r\n    </WrapperStyled>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({\r\n    socket: { currentRoomId, listRoom, listAllUser, listMessage, currentRoom },\r\n    auth: { auth },\r\n  }) => ({\r\n    auth,\r\n    currentRoomId,\r\n    currentRoom,\r\n    listRoom,\r\n    listMessage,\r\n    listAllUser,\r\n  }),\r\n  ({\r\n    auth: { changeAvatar },\r\n    socket: {\r\n      createRoom,\r\n      getAllUser,\r\n      addUser,\r\n      sendMessage,\r\n      getListMessage,\r\n      updateData,\r\n    },\r\n  }) => ({\r\n    createRoom,\r\n    getAllUser,\r\n    addUser,\r\n    getListMessage,\r\n    updateData,\r\n    sendMessage,\r\n    changeAvatar,\r\n  })\r\n)(ChatContainer);\r\n","D:\\project-react\\base-react\\src\\redux\\models\\auth\\index.js",["444","445"],"import authProvider from \"@data-access/auth-provider\";\r\nimport clientUtils from \"@utils/client-utils\";\r\nimport { toast } from \"react-toastify\";\r\nexport default {\r\n  state: {\r\n    auth: (() => {\r\n      try {\r\n        let data = localStorage.getItem(\"auth\") || \"\";\r\n        if (data) {\r\n          const parseData = JSON.parse(data);\r\n          clientUtils.auth = \"Bearer \" + parseData.token;\r\n          return parseData;\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      return null;\r\n    })(),\r\n  },\r\n  reducers: {\r\n    updateData(state, payload = {}) {\r\n      return { ...state, ...payload };\r\n    },\r\n  },\r\n  effects: (dispatch) => ({\r\n    onLogin: (payload, state) => {\r\n      return new Promise((resolve, reject) => {\r\n        authProvider\r\n          .login({ ...payload, redirectURI: \"http://localhost:3000\" })\r\n          .then((res) => {\r\n            if (res && res.code === 0) {\r\n              localStorage.setItem(\"auth\", JSON.stringify(res?.data));\r\n              toast.success(\"Đăng nhập thành công\");\r\n              dispatch.auth.updateData({ auth: res.data });\r\n              // setTimeout(() => {\r\n              //   window.location.reload();\r\n              // }, 5000);\r\n\r\n              resolve(res);\r\n            } else {\r\n              toast.error(res.message);\r\n              reject(res);\r\n            }\r\n          })\r\n          .catch((e) => {\r\n            reject(e);\r\n          });\r\n      });\r\n    },\r\n    onRegister: (payload, state) => {\r\n      return new Promise((resolve, reject) => {\r\n        authProvider\r\n          .register(payload)\r\n          .then((res) => {\r\n            if (res && res.code === 0) {\r\n              toast.success(\r\n                \"Đăng ký thành công. Vui lòng đăng nhập vào hệ thống\"\r\n              );\r\n              resolve(res);\r\n            } else {\r\n              toast.error(res.message);\r\n              reject(res);\r\n            }\r\n          })\r\n          .catch(reject);\r\n      });\r\n    },\r\n    changeAvatar: (file, { auth: { auth } }) => {\r\n      authProvider.changeAvatar(file).then((res) => {\r\n        if (res && res.code == 0) {\r\n          dispatch.auth.updateData({\r\n            auth: { ...auth, avatar: res.data?.avatar },\r\n          });\r\n          localStorage.setItem(\r\n            \"auth\",\r\n            JSON.stringify({ ...auth, avatar: res.data?.avatar })\r\n          );\r\n\r\n          toast.success(\"Đổi ảnh đại diện thành công\");\r\n        }\r\n      });\r\n    },\r\n  }),\r\n};\r\n","D:\\project-react\\base-react\\src\\redux\\models\\post\\index.js",["446"],"import fetchProvider from \"@data-access/post-provider\";\r\nimport baseStore from \"../base-store\";\r\n\r\nexport default {\r\n  ...baseStore({\r\n    fetchProvider,\r\n    storeName: \"post\",\r\n    title: \"Bài viết\",\r\n    initState: { size: 20 },\r\n    customEffect: ({ dispatch }) => ({\r\n      updatePost: (payload, state) => {\r\n        const listData = Object.assign([], state.post._listData);\r\n        const index = listData.findIndex((item) => item.id === payload.id);\r\n        listData[index] = payload;\r\n\r\n        dispatch.post.updateData({ _listData: listData });\r\n      },\r\n    }),\r\n  }),\r\n};\r\n","D:\\project-react\\base-react\\src\\redux\\models\\cache\\index.js",["447"],"import dataCache from \"@utils/data-cache\";\r\n\r\nexport default {\r\n  state: {\r\n    historySearch: dataCache.read(\"history-search\") || [],\r\n  },\r\n  reducers: {\r\n    updateData(state, payload = {}) {\r\n      return { ...state, ...payload };\r\n    },\r\n  },\r\n  effects: (dispatch) => ({}),\r\n};\r\n","D:\\project-react\\base-react\\src\\redux\\models\\socket\\index.js",["448","449","450","451","452","453","454","455","456","457","458"],"import accountProvider from \"@data-access/account-provider\";\r\nimport roomProvider from \"@data-access/room-provider\";\r\nimport messageProvider from \"@data-access/message-provider\";\r\nimport dataCache from \"@utils/data-cache\";\r\nimport { toast } from \"react-toastify\";\r\nimport SockJS from \"sockjs-client\";\r\nimport Stomp from \"stomp-websocket\";\r\nimport { createRef } from \"react\";\r\nimport fileProvider from \"@src/data-access/file-provider\";\r\n// import { message } from \"antd\";\r\n\r\nconst refTimeout = createRef();\r\n\r\nexport default {\r\n  state: {\r\n    stompClient: null,\r\n\r\n    listRoom: [],\r\n    listMessage: [],\r\n    listLastSeen: [],\r\n    listAllUser: [],\r\n    currentRoomId: null,\r\n  },\r\n  reducers: {\r\n    updateData(state, payload = {}) {\r\n      dataCache.save(`_store_chat`, { ...state, ...payload });\r\n      return { ...state, ...payload };\r\n    },\r\n  },\r\n  effects: (dispatch) => ({\r\n    connect: (payload = {}, state) => {\r\n      var stompClient = null;\r\n      var socket = null;\r\n      const { userId } = state.auth?.auth || {};\r\n\r\n      function connect() {\r\n        socket = new SockJS(\"http://localhost:8800/ws\"); // api/v1\r\n        stompClient = Stomp.over(socket);\r\n        stompClient.connect(\r\n          { chatRoomId: 1, userId, roomId: 10, access: \"ok\" },\r\n          stompSuccess,\r\n          stompFailure\r\n        );\r\n        dispatch.socket.updateData({ stompClient });\r\n      }\r\n\r\n      const stompSuccess = (frame) => {\r\n        console.log(frame, \"frame\");\r\n        if (userId) {\r\n          stompClient.subscribe(\"/broker/chat/\" + userId, ({ body }) => {\r\n            const res = JSON.parse(body);\r\n            if (res.type === \"listRoom\") {\r\n              dispatch.socket.updateData({ listRoom: res.data });\r\n              for (let i = 0; i < res.data?.length; i++) {\r\n                dispatch.socket.getListMessage(res.data[i]?.id);\r\n              }\r\n            } else if (res.type === \"join\") {\r\n              dispatch.socket.updateListRoom(res.data);\r\n            } else if (res.type === \"warning\") {\r\n              toast.error(res.data);\r\n            } else if (res.type === \"chat\") {\r\n              dispatch.socket.updateListMessage(res.data);\r\n              dispatch.socket.sendlastSeen({\r\n                messageId: res.data?.id,\r\n                roomId: res.data?.roomId,\r\n              });\r\n            } else if (res.type === \"emoji\") {\r\n              dispatch.socket.updateEmoji(res.data);\r\n            } else if (res.type === \"emoji-remove\") {\r\n              dispatch.socket.updateEmojiRemove(res.data);\r\n            } else if (res.type === \"lastSeen\") {\r\n              console.log(\"updatelastseen\");\r\n              dispatch.socket.updateLastSeen(res.data);\r\n            }\r\n            console.log(\"received body: \", res);\r\n          });\r\n          stompClient.send(\"/app/list.room.\" + userId, {}, {});\r\n        }\r\n      };\r\n\r\n      function stompFailure(error) {\r\n        toast.error(\"Hệ thống đang bảo trì. Xin vui lòng chờ ...\");\r\n      }\r\n\r\n      connect();\r\n    },\r\n    createRoom: (_, { auth: { auth } }) => {\r\n      roomProvider.post({ adminId: auth?.userId }).then((res) => {\r\n        if (res && res.code === 0) {\r\n          dispatch.socket.updateListRoom(res.data);\r\n        }\r\n      });\r\n    },\r\n    getAllUser: (_) => {\r\n      accountProvider.search({ page: 0, size: 99 }).then((res) => {\r\n        if (res && res.code === 0) {\r\n          dispatch.socket.updateData({ listAllUser: res.data });\r\n        }\r\n      });\r\n    },\r\n    addUser: (userId, { socket: { currentRoomId } }) => {\r\n      roomProvider.addUser(userId, currentRoomId).then((res) => {\r\n        if (res && res.code === 0) {\r\n          //   dispatch.socket.updateData({ listAllUser: res.data });\r\n        }\r\n      });\r\n    },\r\n    updateListRoom: (payload, state) => {\r\n      const { listRoom } = state.socket;\r\n      const indexRoom = listRoom.findIndex((item) => item.id === payload.id);\r\n      if (indexRoom !== -1) {\r\n        listRoom.splice(indexRoom, 1);\r\n      }\r\n\r\n      dispatch.socket.updateData({ listRoom: [payload, ...listRoom] });\r\n    },\r\n    updateListMessage: (payload, state) => {\r\n      const { listMessage, currentRoomId } = state.socket;\r\n\r\n      if (currentRoomId != payload.roomId) {\r\n        return;\r\n      }\r\n\r\n      dispatch.socket.updateData({ listMessage: [...listMessage, payload] });\r\n      dispatch.socket.scrollToBottom();\r\n    },\r\n    updateLastSeen: (payload, state) => {\r\n      const { listMessage, currentRoomId } = state.socket;\r\n      const newMessages = Object.assign([], listMessage);\r\n\r\n      if (currentRoomId != payload.roomId) {\r\n        return;\r\n      }\r\n\r\n      const indexMessage = listMessage.findIndex(\r\n        (item) => item.id === payload.messageId\r\n      );\r\n      const indexRemove = listMessage.findIndex((item) =>\r\n        item.listLastSeen?.some((i) => i.userId === payload.userId)\r\n      );\r\n\r\n      if (indexRemove != -1) {\r\n        const messageSeen = newMessages[indexRemove];\r\n        messageSeen.listLastSeen = messageSeen?.listLastSeen.filter(\r\n          (i) => i.userId != payload.userId\r\n        );\r\n        newMessages.splice(indexRemove, 1, messageSeen);\r\n      }\r\n\r\n      if (indexMessage != -1) {\r\n        const messageSeen = newMessages[indexMessage];\r\n        if (!messageSeen?.listLastSeen) {\r\n          messageSeen.listLastSeen = [payload];\r\n        } else messageSeen?.listLastSeen.push(payload);\r\n        newMessages.splice(indexMessage, 1, messageSeen);\r\n      }\r\n      dispatch.socket.updateData({ listMessage: [...newMessages] });\r\n    },\r\n    updateEmoji: (payload, state) => {\r\n      const { listMessage, currentRoomId } = state.socket;\r\n      const newMessages = Object.assign([], listMessage);\r\n\r\n      if (currentRoomId != payload.roomId) {\r\n        return;\r\n      }\r\n\r\n      const indexMessage = listMessage.findIndex(\r\n        (item) => item.id === payload.messageId\r\n      );\r\n\r\n      if (indexMessage != -1) {\r\n        const messageEmoji = newMessages[indexMessage];\r\n        if (messageEmoji.listEmoji) {\r\n          messageEmoji.listEmoji = [...messageEmoji.listEmoji, payload];\r\n        } else {\r\n          messageEmoji.listEmoji = [payload];\r\n        }\r\n        newMessages.splice(indexMessage, 1, messageEmoji);\r\n      }\r\n      dispatch.socket.updateData({ listMessage: [...newMessages] });\r\n    },\r\n    updateEmojiRemove: (payload, state) => {\r\n      const { listMessage, currentRoomId } = state.socket;\r\n      const newMessages = Object.assign([], listMessage);\r\n\r\n      if (currentRoomId != payload.roomId) {\r\n        return;\r\n      }\r\n\r\n      const indexMessage = listMessage.findIndex(\r\n        (item) => item.id === payload.messageId\r\n      );\r\n\r\n      if (indexMessage != -1) {\r\n        const messageEmoji = newMessages[indexMessage];\r\n        messageEmoji.listEmoji = messageEmoji.listEmoji?.filter(\r\n          (i) => i.userId != payload.userId\r\n        );\r\n      }\r\n      dispatch.socket.updateData({ listMessage: [...newMessages] });\r\n    },\r\n    sendEmoji: (\r\n      { type, messageId },\r\n      { auth: { auth }, socket: { stompClient, currentRoomId } }\r\n    ) => {\r\n      stompClient.send(\r\n        `/app/send.emoji`,\r\n        {},\r\n        JSON.stringify({\r\n          userId: auth?.userId,\r\n          messageId,\r\n          type,\r\n          roomId: currentRoomId,\r\n        })\r\n      );\r\n    },\r\n    scrollToBottom: () => {\r\n      if (refTimeout.current) {\r\n        clearTimeout(refTimeout.current);\r\n      }\r\n      refTimeout.current = setTimeout(() => {\r\n        document\r\n          .getElementById(\"id-content-chat-message\")\r\n          ?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\r\n      });\r\n    },\r\n    getListMessage: (\r\n      roomId,\r\n      {\r\n        auth: { auth },\r\n        socket: { currentRoomId, stompClient, listMessage, ...rest },\r\n      }\r\n    ) => {\r\n      if (rest[`messageRoom${roomId}`]) {\r\n        dispatch.socket.updateData({\r\n          listMessage: rest[`messageRoom${roomId}`],\r\n        });\r\n        setTimeout(() => {\r\n          dispatch.socket.scrollToBottom();\r\n          const listMess = rest[`messageRoom${roomId}`];\r\n          dispatch.socket.sendlastSeen({\r\n            messageId: listMess[listMess?.length - 1]?.id,\r\n            roomId: listMess[listMess?.length - 1]?.roomId,\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch.socket.updateData({\r\n          [`messageRoom${roomId}`]: [],\r\n        });\r\n        messageProvider\r\n          .search({ roomId, sort: \"createdAt,desc\", size: 20 })\r\n          .then((res) => {\r\n            if (res && res.code === 0) {\r\n              if (roomId === currentRoomId) {\r\n                dispatch.socket.updateData({\r\n                  listMessage: res.data?.reverse(),\r\n                  [`messageRoom${roomId}`]: res.data?.reverse(),\r\n                });\r\n              } else\r\n                dispatch.socket.updateData({\r\n                  [`messageRoom${roomId}`]: res.data?.reverse(),\r\n                });\r\n              dispatch.socket.sendlastSeen({\r\n                messageId: res.data[res.data?.length - 1]?.id,\r\n                roomId: res.data[res.data?.length - 1]?.roomId,\r\n              });\r\n              dispatch.socket.scrollToBottom();\r\n            }\r\n          });\r\n      }\r\n    },\r\n    sendlastSeen: (\r\n      { messageId, roomId },\r\n      { auth: { auth }, socket: { stompClient, currentRoomId } }\r\n    ) => {\r\n      if (roomId === currentRoomId) {\r\n        setTimeout(() => {\r\n          stompClient?.send(\r\n            `/app/last.seen.${auth?.userId}.${currentRoomId}.${messageId}`\r\n          );\r\n        }, 3000);\r\n      }\r\n    },\r\n    sendMessage: (\r\n      { content } = {},\r\n      { auth: { auth }, socket: { stompClient, currentRoomId } }\r\n    ) => {\r\n      if (!currentRoomId) {\r\n        toast.error(\"chưa chọn phòng\");\r\n        return;\r\n      }\r\n      if (!auth?.userId) {\r\n        toast.error(\"chưa đăng nhập\");\r\n        return;\r\n      }\r\n      stompClient?.send(\r\n        \"/app/send.message\",\r\n        {},\r\n        JSON.stringify({\r\n          fromId: auth?.userId,\r\n          roomId: currentRoomId,\r\n          content,\r\n        })\r\n      );\r\n    },\r\n    // remove\r\n    changeAvatar: (file, { auth: { auth } }) => {\r\n      fileProvider\r\n        .upload(file)\r\n        .then((fileDetail) => {\r\n          if (fileDetail && fileDetail.code === 0) {\r\n            dispatch.auth.updateAvatar(fileDetail?.data.filePath);\r\n          } else {\r\n          }\r\n        })\r\n        .finally(() => {});\r\n    },\r\n  }),\r\n};\r\n","D:\\project-react\\base-react\\src\\utils\\index.js",[],"D:\\project-react\\base-react\\src\\views\\public\\home\\styled.js",["459"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const WrapperStyled = styled.div`\r\n  background-color: rgb(249, 249, 249);\r\n  .container {\r\n    &__adver {\r\n      flex: 1;\r\n      text-align: center;\r\n      position: fixed;\r\n      &-left,\r\n      &-right {\r\n        position: fixed;\r\n        top: 50px;\r\n        img {\r\n          width: 300px;\r\n          height: 600px;\r\n        }\r\n      }\r\n      &-left {\r\n        left: 50px;\r\n      }\r\n      &-right {\r\n        right: 50px;\r\n      }\r\n    }\r\n    &__body {\r\n      display: flex;\r\n      justify-content: center;\r\n      &--main {\r\n        width: 40%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","D:\\project-react\\base-react\\src\\views\\public\\map\\MapComponent.js",[],"D:\\project-react\\base-react\\src\\views\\public\\chat\\styled.js",[],"D:\\project-react\\base-react\\src\\views\\public\\home\\components\\post.js",["460","461"],"import { getImg } from \"@src/utils/common\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport InputComment from \"./input-comment\";\r\nimport { WrapperStyled } from \"./styled\";\r\n\r\nconst Post = ({\r\n  id,\r\n  content,\r\n  author,\r\n  timestamp,\r\n  createdAt,\r\n  imgUrl,\r\n  numberLike,\r\n  numberComment,\r\n  imgPath,\r\n  createdBy,\r\n  isLike,\r\n  avatar,\r\n  resManagerDTO,\r\n  idRes,\r\n\r\n  auth,\r\n  onEdit,\r\n  createLike,\r\n  deleteLike,\r\n  onLike,\r\n  listUser = [],\r\n  createComment,\r\n  deleteComment,\r\n  getListComment,\r\n  updatePost,\r\n  deletePost,\r\n  getListPost,\r\n}) => {\r\n  const [state, _setstate] = useState({\r\n    showMenu: false,\r\n    listComment: [],\r\n    isClickComment: false,\r\n  });\r\n  const setState = (data) => {\r\n    _setstate((pre) => ({ ...pre, ...data }));\r\n  };\r\n  const history = useHistory();\r\n  const refTimeout = useRef();\r\n  const refComment = useRef();\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", (e) => {\r\n      if (\r\n        typeof e.target.className === \"string\" &&\r\n        e.target.className?.indexOf(\"post-menu-id\") === -1\r\n      ) {\r\n        setState({ showMenu: false });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleLike = () => {\r\n    if (!auth?.userId) {\r\n      toast.info(\"Vui lòng đăng nhập hệ thống\");\r\n      setTimeout(() => {\r\n        history.push(\"/auth/login\");\r\n      }, 2000);\r\n\r\n      return;\r\n    }\r\n    // onLike({ isLike: !isLike, postId: id });\r\n    if (refTimeout.current) {\r\n      clearTimeout(refTimeout.current);\r\n    }\r\n\r\n    refTimeout.current = setTimeout(() => {\r\n      if (isLike) {\r\n        deleteLike(id);\r\n      } else {\r\n        createLike(id);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  const upComment = (input) => {\r\n    updatePost({\r\n      id,\r\n      content,\r\n      author,\r\n      timestamp,\r\n      createdAt,\r\n      imgUrl,\r\n      numberLike,\r\n      numberComment: numberComment + input,\r\n      imgPath,\r\n      createdBy,\r\n      isLike,\r\n    });\r\n  };\r\n  const showComment = (forceCall) => {\r\n    // if (state.isClickComment && !forceCall) return;\r\n    // getListComment({\r\n    //   page: 0,\r\n    //   size: 99,\r\n    //   // userId: auth?.userId,\r\n    //   postId: id,\r\n    // }).then((res) => {\r\n    //   if (res && res.code === 0) {\r\n    //     setState({ isClickComment: true, listComment: res.data });\r\n    //   }\r\n    // });\r\n  };\r\n\r\n  const handleComment = () => {\r\n    if (refComment.current?.getValue()?.length === 0) {\r\n      toast.error(\"Nội dung không được để trống\");\r\n      return;\r\n    }\r\n    createComment({\r\n      userId: auth?.userId,\r\n      postId: id,\r\n      idRes: auth?.userId,\r\n      content: refComment.current?.getValue(),\r\n    }).then((res) => {\r\n      if (res && res.code === 0) {\r\n        showComment(true);\r\n        upComment(1);\r\n        if (refComment.current) {\r\n          refComment.current.reset();\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleDeleteComment = (commentId) => {\r\n    deleteComment(commentId).then((res) => {\r\n      if (res && res.code === 0) {\r\n        const newListComment = Object.assign([], state.listComment);\r\n        setState({\r\n          listComment: newListComment.filter((item) => item.id != commentId),\r\n        });\r\n        upComment(-1);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <WrapperStyled>\r\n      <div className=\"container-header\">\r\n        <div className=\"container-header-info\">\r\n          <img\r\n            src={getImg(resManagerDTO?.avatar)}\r\n            alt=\"\"\r\n            className=\"container-header-info_avatar\"\r\n          />\r\n          <ul className=\"container__body--main-frame-headerNT\">\r\n            <li className=\"container-header-info_name\">{\"Ngô Hiếu\"}</li>\r\n            <li className=\"container-header-info_time\">{\"45 phút trước\"}</li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"sidebar\">\r\n          {auth?.userId && auth?.userId === idRes && (\r\n            <label\r\n              onClick={() => {\r\n                setState({ showMenu: true });\r\n              }}\r\n            >\r\n              <i className=\"container__body--main-frame-header-menu fa fa-ellipsis-h\"></i>\r\n            </label>\r\n          )}\r\n          {state.showMenu && (\r\n            <div className=\"sidebar_menu post-menu-id\">\r\n              {auth?.userId === idRes && (\r\n                <ul className=\"sidebar_menu-list post-menu-id\">\r\n                  {auth?.userId === createdBy && (\r\n                    <li\r\n                      onClick={onEdit}\r\n                      className=\"sidebar_menu-item post-menu-id\"\r\n                    >\r\n                      Sửa bài\r\n                    </li>\r\n                  )}\r\n                  <li\r\n                    className=\"sidebar_menu-item post-menu-id\"\r\n                    onClick={() => {\r\n                      setState({ showPopConfirm: true });\r\n                    }}\r\n                  >\r\n                    Xóa bài\r\n                  </li>\r\n                </ul>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <p className=\"container-body\">{\"Nội dung bài viết\"}</p>\r\n      <img\r\n        // src={`${clientUtils.serverApi}/files/${imgPath}`}\r\n        src=\"https://www.state.gov/wp-content/uploads/2019/04/Japan-2107x1406.jpg\"\r\n        alt=\"\"\r\n        className=\"container-body_img\"\r\n      />\r\n\r\n      <div className=\"container-footer\">\r\n        <div className=\"container-footer-like\">\r\n          <i className=\"container-footer-like-icon fa fa-heart\"></i>\r\n          <span className=\"container-footer-like-q\">{numberLike}</span>\r\n        </div>\r\n        <div className=\"container-footer-cmt\">\r\n          <span className=\"container-footer-cmt-q\">{numberComment}</span>\r\n          <span className=\"container-footer-cmt-d\">Bình luận</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"container-comment\">\r\n        <div\r\n          onClick={handleLike}\r\n          className={`container-comment-action-like ${\r\n            isLike ? \"container-comment-action-liked\" : \"\"\r\n          }`}\r\n        >\r\n          <i className=\"container-comment-action-like-icon fa fa-heart\"></i>\r\n          <span className=\"container-comment-action-like-btn\">Yêu thích</span>\r\n        </div>\r\n        <div className=\"container-comment-action-cmt\" onClick={showComment}>\r\n          <i className=\"container-comment-action-cmt-icon fa fa-comments\"></i>\r\n          <span className=\"container-comment-action-cmt-btn\">Bình luận</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"container-input-cmt\">\r\n        <div className=\"left-comment\">\r\n          <div className=\"avatar\">\r\n            <img\r\n              src={getImg(auth?.image)}\r\n              alt=\"\"\r\n              className=\"frame-header-avt\"\r\n            />\r\n          </div>\r\n          <div className=\"comment-input\">\r\n            <InputComment ref={refComment} />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button type=\"primary\" onClick={handleComment}>\r\n            Đăng\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {[1, 2, 3].map((item, idx) => (\r\n        <div key={idx} className=\"container__list-comment\">\r\n          <div className=\"container__list-comment-avatar\">\r\n            <img\r\n              src={getImg(item.avatar)}\r\n              alt=\"\"\r\n              className=\"frame-header-avt\"\r\n            />\r\n          </div>\r\n          <div className=\"comment-item\">\r\n            <span>\r\n              <span className=\"comment-username\">{\"Ngô Huy\"}</span>\r\n            </span>\r\n            <div>\r\n              <div className=\"content-comment\">{\"Nội dung comment\"}</div>\r\n            </div>\r\n          </div>\r\n          <i className=\"fa fa-times delete-comment\" />\r\n        </div>\r\n      ))}\r\n      {/* <Modal\r\n        visible={state.showPopConfirm}\r\n        cancelText={\"Hủy\"}\r\n        okText={\"Gỡ bài\"}\r\n        onCancel={() => {\r\n          setState({ showPopConfirm: false });\r\n        }}\r\n        onOk={() => {\r\n          deletePost(id);\r\n        }}\r\n      >\r\n        <div style={{ textAlign: \"center\", fontSize: 20, fontWeight: \"bold\" }}>\r\n          Bạn có chắc muốn gỡ bài viết\r\n        </div>\r\n      </Modal> */}\r\n    </WrapperStyled>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ auth: { auth } }) => ({\r\n    auth,\r\n  }),\r\n  ({\r\n    auth: { logout },\r\n    cache: { saveHistory },\r\n    post: { search: getListPost, delete: deletePost, updatePost },\r\n    // like: { createLike, deleteLike, onLike },\r\n    // comment: {\r\n    //   _createOrEdit: createComment,\r\n    //   _getList: getListComment,\r\n    //   _onDelete: deleteComment,\r\n    // },\r\n  }) => ({\r\n    logout,\r\n    saveHistory,\r\n    getListPost,\r\n    updatePost,\r\n    // createLike,\r\n    // deleteLike,\r\n    // onLike,\r\n    // createComment,\r\n    // deleteComment,\r\n    // getListComment,\r\n    deletePost,\r\n  })\r\n)(Post);\r\n","D:\\project-react\\base-react\\src\\views\\public\\container\\create-room-modal.js",["462","463"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Modal from \"../chat/components/modal\";\r\n\r\nconst WrapperLogin = styled.div`\r\n  .md-login-header {\r\n    text-align: center;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    margin-bottom: 20px;\r\n    background-color: #2b2b2b;\r\n    color: white;\r\n    padding: 5px;\r\n  }\r\n  .md-login-body {\r\n    margin-bottom: 10px;\r\n    &-input {\r\n      padding: 10px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      text-align: center;\r\n      input {\r\n        margin: 0 auto;\r\n        width: 60%;\r\n        border-radius: 5px;\r\n        height: 35px;\r\n        border: 1px solid #ccc;\r\n        padding: 0 15px;\r\n        outline: none;\r\n        text-align: left;\r\n        &:hover,\r\n        &:focus {\r\n          box-shadow: 0 0px 3px #50a3b9;\r\n          border: 1px solid #50a3b9;\r\n        }\r\n      }\r\n      &.danger {\r\n        input {\r\n          border-color: red;\r\n        }\r\n      }\r\n      .danger {\r\n        color: red;\r\n      }\r\n    }\r\n  }\r\n  .md-login-footer {\r\n    .btn-login {\r\n      background-color: #50a3b9;\r\n      width: 50%;\r\n      margin: 0 auto;\r\n      text-align: center;\r\n      color: white;\r\n      border-radius: 15px;\r\n      padding: 5px;\r\n      cursor: pointer;\r\n      transition: all 0.4s;\r\n      &:hover {\r\n        transform: scale(1.05);\r\n      }\r\n    }\r\n  }\r\n  .md-login-signup {\r\n    text-align: center;\r\n    span {\r\n      cursor: pointer;\r\n      color: #73b7c9;\r\n      :hover {\r\n        color: #50a3b9;\r\n      }\r\n    }\r\n  }\r\n  .md-login-switch {\r\n    position: absolute;\r\n    width: 100%;\r\n    padding: 5px;\r\n    bottom: 0;\r\n    background: #188754;\r\n    text-align: center;\r\n    color: white;\r\n    cursor: pointer;\r\n    span:before {\r\n      background-color: white;\r\n    }\r\n    &-text {\r\n      position: relative;\r\n      z-index: 1;\r\n    }\r\n    &-effect {\r\n      width: 0;\r\n      height: 3px;\r\n      left: 50%;\r\n      bottom: 0;\r\n      position: absolute;\r\n      background-color: #50a3b9;\r\n      transition: all 0.5s;\r\n    }\r\n    &:hover {\r\n      .md-login-switch-effect {\r\n        width: 50%;\r\n        left: 25%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CreateRoomModal = ({}) => {\r\n  const [state, _setState] = useState({});\r\n  const setState = (data) => {\r\n    _setState((pre) => ({ ...pre, ...data }));\r\n  };\r\n\r\n  return (\r\n    <Modal visible={true} height={state.isLogin ? 300 : 450}>\r\n      <WrapperLogin>\r\n        <div className=\"md-login-header\">\r\n          {state.isLogin ? \"Login\" : \"Register\"}\r\n        </div>\r\n        <div className=\"md-login-body\"></div>\r\n\r\n        <div className=\"md-login-footer\">\r\n          <div className=\"btn-login\">{state.isLogin ? \"Login\" : \"Sign up\"}</div>\r\n        </div>\r\n      </WrapperLogin>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateRoomModal;\r\n","D:\\project-react\\base-react\\src\\views\\public\\container\\login-modal.js",[],"D:\\project-react\\base-react\\src\\views\\public\\chat\\components\\message.js",["464","465","466","467","468"],"import React, { useMemo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getImg } from \"@utils/common\";\r\n\r\nconst listEmoji = [\r\n  \"https://static.xx.fbcdn.net/images/emoji.php/v9/tf3/1.5/16/2764.png\",\r\n  \"https://static.xx.fbcdn.net/images/emoji.php/v9/te7/1.5/32/1f606.png\",\r\n  \"https://static.xx.fbcdn.net/images/emoji.php/v9/td4/1.5/32/1f62e.png\",\r\n  \"https://static.xx.fbcdn.net/images/emoji.php/v9/t1f/1.5/32/1f620.png\",\r\n  \"https://static.xx.fbcdn.net/images/emoji.php/v9/tf/1.5/32/1f44d.png\",\r\n];\r\n\r\nconst Message = ({\r\n  data = {},\r\n  front,\r\n  end,\r\n  numberLike = 2,\r\n  auth,\r\n  sendEmoji,\r\n}) => {\r\n  const emojiIcon = useMemo(() => {\r\n    const setEmoji = new Set();\r\n    for (let i = 0; i < data.listEmoji?.length; i++) {\r\n      setEmoji.add(data.listEmoji[i].type);\r\n      if (setEmoji.length > 2) break;\r\n    }\r\n    return Array.from(setEmoji);\r\n  }, [data.listEmoji]);\r\n\r\n  console.log(emojiIcon, \"emojiIcon\");\r\n\r\n  return (\r\n    <div\r\n      className={`content-message-item ${\r\n        front\r\n          ? end\r\n            ? \"content-message-item-mid\"\r\n            : \"content-message-item-front\"\r\n          : end\r\n          ? \"content-message-item-end\"\r\n          : \"\"\r\n      } ${\r\n        auth.userId === data.fromId\r\n          ? \"content-message-item-send\"\r\n          : \"content-message-item-receive\"\r\n      } ${\r\n        data?.listEmoji?.length && !data?.listLastSeen?.length\r\n          ? \"content-message-item-react\"\r\n          : \"\"\r\n      }`}\r\n    >\r\n      {auth.userId !== data.fromId && (\r\n        <div className=\"main-center-top-img\">\r\n          {!end && <img src={getImg(data?.avatar)} />}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"wrapper-data\">\r\n        <div className={`user-name-send`}>\r\n          {auth.userId !== data.fromId && !front && data.fullName}\r\n        </div>\r\n        <div className={`wrapper-data-content`}>\r\n          {data.content}\r\n          {data?.listEmoji?.length > 0 && (\r\n            <div\r\n              className={`react-message ${\r\n                auth.userId === data.fromId ? \"react-message-send\" : \"\"\r\n              }`}\r\n            >\r\n              <div>\r\n                {emojiIcon?.map((i, j) => (\r\n                  <img key={j} src={listEmoji[i - 1]} />\r\n                ))}\r\n              </div>\r\n              <div>{data?.listEmoji?.length}</div>\r\n            </div>\r\n          )}\r\n          <div\r\n            className={`react-message-option ${\r\n              auth.userId == data.fromId && \"react-message-option-send\"\r\n            }`}\r\n          >\r\n            {listEmoji.map((item, key) => (\r\n              <div key={key} className=\"react-message-option-wrapper\">\r\n                <img\r\n                  className=\"react-message-option-status\"\r\n                  src={item}\r\n                  onClick={() =>\r\n                    sendEmoji({ type: key + 1, messageId: data.id })\r\n                  }\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={`list-last-seen ${\r\n            auth.userId === data.fromId && \"list-last-seen-send\"\r\n          } ${data?.listLastSeen?.length > 0 ? \"list-last-seen-like\" : \"\"}`}\r\n        >\r\n          {data?.listLastSeen?.map((item, idx) => (\r\n            <div key={idx} className=\"list-last-seen-item\">\r\n              <div className=\"list-last-seen-item-child\">\r\n                <img src={getImg(item?.account?.avatar)} />\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {!!data?.listLastSeen?.length && (\r\n            <div className=\"list-last-seen-item list-last-seen-item-content\">\r\n              Đã xem\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ auth: { auth } }) => ({ auth }),\r\n  ({ socket: { sendEmoji } }) => ({ sendEmoji })\r\n)(Message);\r\n","D:\\project-react\\base-react\\src\\redux\\models\\base-store.js",["469"],"import { toast } from \"react-toastify\";\r\nimport dataCache from \"@utils/data-cache\";\r\n\r\nexport default ({\r\n  // BẮT BUỘC\r\n  fetchProvider, // phải là provider kết hợp từ base-provider\r\n  storeName, // tên store\r\n  title = \"\",\r\n\r\n  initStore = {},\r\n  ignoreCache,\r\n  customEffect = () => ({}),\r\n}) => ({\r\n  state: {\r\n    listData: [],\r\n    totalElements: 0,\r\n    params: { page: 0, size: 10 },\r\n    ...initStore,\r\n    ...(ignoreCache ? {} : dataCache.read(`_store_${storeName}`)),\r\n  },\r\n  reducers: {\r\n    updateData(state, payload = {}) {\r\n      return { ...state, ...payload };\r\n    },\r\n  },\r\n  effects: (dispatch) => ({\r\n    search: (payload = {}, state) => {\r\n      const newParams = { ...state[storeName].params, ...payload };\r\n      dispatch[storeName].updateData({\r\n        params: newParams,\r\n      });\r\n\r\n      return new Promise((resolve, reject) => {\r\n        fetchProvider\r\n          .search(newParams)\r\n          .then((res) => {\r\n            if (res && res.code === 0 && res.data) {\r\n              dispatch[storeName].updateData({\r\n                listData: res.data,\r\n                totalElements: res.totalElements,\r\n              });\r\n            }\r\n            resolve(res);\r\n          })\r\n          .catch((e) => reject(e));\r\n      });\r\n    },\r\n    // payload có id là put còn không thì là post\r\n    save: (payload) => {\r\n      const callApi = payload.id ? fetchProvider.put : fetchProvider.post;\r\n      return new Promise((resolve, reject) => {\r\n        callApi(payload, payload.id)\r\n          .then((res) => {\r\n            if (res && res.code === 0 && res.data) {\r\n              dispatch[storeName].search();\r\n            } else if (res && res.code === 401) {\r\n              window.location.href = \"/login\";\r\n            } else {\r\n              toast.error(res.message);\r\n            }\r\n            resolve(res);\r\n          })\r\n          .catch((err) => reject(err));\r\n      });\r\n    },\r\n    delete: (payload, state) => {\r\n      return new Promise((resolve, reject) => {\r\n        fetchProvider\r\n          .delete(payload)\r\n          .then((res) => {\r\n            if (res && res.code === 0) {\r\n              dispatch[storeName].search();\r\n            } else if (res && res.code === 401) {\r\n              window.location.href = \"/login\";\r\n            } else {\r\n              toast.error(res.message);\r\n            }\r\n            resolve(res);\r\n          })\r\n          .catch((e) => reject(e));\r\n      });\r\n    },\r\n    ...customEffect({ dispatch }),\r\n  }),\r\n});\r\n","D:\\project-react\\base-react\\src\\utils\\data-cache.js",[],"D:\\project-react\\base-react\\src\\data-access\\post-provider.js",["470"],"import { API } from \"@src/constants\";\r\nimport baseProvider from \"./base-provider\";\r\n\r\nexport default {\r\n  ...baseProvider(API.post),\r\n};\r\n","D:\\project-react\\base-react\\src\\data-access\\account-provider.js",["471"],"import { API } from \"@src/constants\";\r\nimport clientUtils from \"@src/utils/client-utils\";\r\nimport { combineUrlParams } from \"@src/utils/common\";\r\nimport baseProvider from \"./base-provider\";\r\n\r\nexport default {\r\n  ...baseProvider(API.account),\r\n  getUser: ({ page = 0, size = 10, ...param } = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n      clientUtils\r\n        .requestApi(\r\n          \"get\",\r\n          combineUrlParams(`${API.account}`, {\r\n            page,\r\n            size: 999,\r\n            ...param,\r\n          }),\r\n          {}\r\n        )\r\n        .then((x) => {\r\n          resolve(x);\r\n        })\r\n        .catch((e) => {\r\n          reject(e);\r\n        });\r\n    });\r\n  },\r\n  changeAvatar: ({ avatar } = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n      clientUtils\r\n        .requestApi(\"put\", `${API.account}/avatar`, { avatar })\r\n        .then((x) => {\r\n          resolve(x);\r\n        })\r\n        .catch((e) => {\r\n          reject(e);\r\n        });\r\n    });\r\n  },\r\n};\r\n","D:\\project-react\\base-react\\src\\data-access\\auth-provider.js",["472"],"import { API } from \"@constants\";\r\nimport clientUtils from \"@utils/client-utils\";\r\nimport { combineUrlParams } from \"@src/utils/common\";\r\n\r\nexport default {\r\n  login(body) {\r\n    return new Promise((resolve, reject) => {\r\n      clientUtils\r\n        .requestApi(\r\n          \"post\",\r\n          combineUrlParams(\r\n            `/account/login`\r\n            // `/chat-server/api/v1/login`\r\n            // {\r\n            //   response_type: \"code\",\r\n            //   client_id: \"hoang\",\r\n            //   scope: \"read\",\r\n            //   state: \"2K4ZDYkjCYQf6u5NPJYGDtOtxmUkgI73WIcI-PJFe8k%3D\",\r\n            //   redirect_uri: \"http://localhost:3000\",\r\n            // }\r\n          ),\r\n          body,\r\n          true\r\n        )\r\n        .then((x) => {\r\n          resolve(x);\r\n        })\r\n        .catch((e) => {\r\n          reject(e);\r\n        });\r\n    });\r\n  },\r\n  register(body) {\r\n    return new Promise((resolve, reject) => {\r\n      clientUtils\r\n        .requestApi(\"post\", `${API.account}/register`, body, true)\r\n        .then((x) => {\r\n          resolve(x);\r\n        })\r\n        .catch((e) => {\r\n          reject(e);\r\n        });\r\n    });\r\n  },\r\n  changeAvatar(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n\r\n      clientUtils\r\n        .upload(\"put\", `${API.account}/avatar`, formData)\r\n        .then((x) => {\r\n          resolve(x);\r\n        })\r\n        .catch((e) => {\r\n          reject(e);\r\n        });\r\n    });\r\n  },\r\n};\r\n","D:\\project-react\\base-react\\src\\data-access\\room-provider.js",["473"],"import { API } from \"@src/constants\";\r\nimport baseProvider from \"./base-provider\";\r\nimport { combineUrlParams } from \"@utils/common\";\r\nimport clientUtils from \"@utils/client-utils\";\r\n\r\nexport default {\r\n  ...baseProvider(API.room),\r\n  addUser: (userId, roomId) => {\r\n    return new Promise((resolve, reject) => {\r\n      clientUtils\r\n        .requestApi(\r\n          \"post\",\r\n          combineUrlParams(`${API.room}/join/${roomId}/${userId}`, {}),\r\n          {}\r\n        )\r\n        .then((x) => {\r\n          resolve(x);\r\n        })\r\n        .catch((e) => {\r\n          reject(e);\r\n        });\r\n    });\r\n  },\r\n  // getListRoomId({ page = 0, size = 999, ...param } = {}) {\r\n  //   return new Promise((resolve, reject) => {\r\n  //     clientUtils\r\n  //       .requestApi(\r\n  //         \"get\",\r\n  //         combineUrlParams(`${API.room}/list-room-id`, {\r\n  //           page,\r\n  //           size,\r\n  //           ...param,\r\n  //         }),\r\n  //         {}\r\n  //       )\r\n  //       .then((x) => {\r\n  //         resolve(x);\r\n  //       })\r\n  //       .catch((e) => {\r\n  //         reject(e);\r\n  //       });\r\n  //   });\r\n  // },\r\n};\r\n","D:\\project-react\\base-react\\src\\data-access\\file-provider.js",[],"D:\\project-react\\base-react\\src\\data-access\\message-provider.js",["474"],"import { API } from \"@src/constants\";\r\nimport baseProvider from \"./base-provider\";\r\n\r\nexport default {\r\n  ...baseProvider(API.message),\r\n};\r\n","D:\\project-react\\base-react\\src\\views\\public\\home\\components\\styled.js",[],"D:\\project-react\\base-react\\src\\views\\public\\home\\components\\input-comment.js",[],"D:\\project-react\\base-react\\src\\views\\public\\chat\\components\\modal.js",[],"D:\\project-react\\base-react\\src\\data-access\\base-provider.js",["475"],"import { combineUrlParams } from \"@utils/common\";\r\nimport clientUtils from \"@utils/client-utils\";\r\n\r\nexport default (API = \"\") => ({\r\n  search({ page = 0, size = 10, ...param }) {\r\n    return new Promise((resolve, reject) => {\r\n      clientUtils\r\n        .requestApi(\r\n          \"get\",\r\n          combineUrlParams(`${API}`, {\r\n            page,\r\n            size,\r\n            ...param,\r\n          }),\r\n          {},\r\n          true\r\n        )\r\n        .then((x) => {\r\n          resolve(x);\r\n        })\r\n        .catch((e) => {\r\n          reject(e);\r\n        });\r\n    });\r\n  },\r\n  detail(id) {\r\n    return new Promise((resolve, reject) => {\r\n      clientUtils\r\n        .requestApi(\"get\", `${API}/${id}`, {})\r\n        .then((x) => {\r\n          resolve(x);\r\n        })\r\n        .catch((e) => {\r\n          reject(e);\r\n        });\r\n    });\r\n  },\r\n  post(body) {\r\n    return new Promise((resolve, reject) => {\r\n      clientUtils\r\n        .requestApi(\"post\", API, body)\r\n        .then((x) => {\r\n          resolve(x);\r\n        })\r\n        .catch((e) => {\r\n          reject(e);\r\n        });\r\n    });\r\n  },\r\n  put(body, id) {\r\n    return new Promise((resolve, reject) => {\r\n      clientUtils\r\n        .requestApi(\"put\", `${API}/${id}`, body)\r\n        .then((x) => {\r\n          resolve(x);\r\n        })\r\n        .catch((e) => {\r\n          reject(e);\r\n        });\r\n    });\r\n  },\r\n  delete(id) {\r\n    return new Promise((resolve, reject) => {\r\n      clientUtils\r\n        .requestApi(\"delete\", `${API}/${id}`, {})\r\n        .then((x) => {\r\n          resolve(x);\r\n        })\r\n        .catch((e) => {\r\n          reject(e);\r\n        });\r\n    });\r\n  },\r\n});\r\n","D:\\project-react\\base-react\\src\\constants\\index.js",[],"D:\\project-react\\base-react\\src\\views\\public\\chat\\components\\styled.js",[],"D:\\project-react\\react-js-friend-chat\\src\\index.js",[],"D:\\project-react\\react-js-friend-chat\\src\\views\\oauth.js",["476"],"D:\\project-react\\react-js-friend-chat\\src\\redux\\index.js",[],"D:\\project-react\\react-js-friend-chat\\src\\layouts\\public\\index.js",[],"D:\\project-react\\react-js-friend-chat\\src\\views\\timegrid.js",["477","478","479"],"D:\\project-react\\react-js-friend-chat\\src\\utils\\common.js",["480","481","482"],"import moment from \"moment\";\r\nimport clientUtils from \"./client-utils\";\r\n\r\nconst parseUrlParams = () => {\r\n  const { search } = window.location;\r\n  const arrParam = search.slice(1).split(\"&\");\r\n  const param = {};\r\n  for (let i = 0; i < arrParam.length; i++) {\r\n    const pair = arrParam[i].split(\"=\");\r\n    param[pair[0]] = pair[1];\r\n  }\r\n  return param;\r\n};\r\n\r\nconst combineUrlParams = (url = \"\", params = {}) => {\r\n  const keys = Object.keys(params);\r\n  const paramUrl = keys\r\n    .reduce(\r\n      (result, key) =>\r\n        params[key] !== undefined && params[key] !== null && params[key] !== \"\"\r\n          ? [...result, `${key}=${params[key]}`]\r\n          : [...result],\r\n      []\r\n    )\r\n    .join(\"&\");\r\n  return `${url}?${paramUrl}`;\r\n};\r\n\r\nconst timeFromNow = (fromDate, format) => {\r\n  const date = new Date(fromDate);\r\n  const fy = date.getFullYear();\r\n  const fM = date.getMonth();\r\n  const fd = date.getDay();\r\n  const fh = date.getHours();\r\n  const fm = date.getMinutes();\r\n  const fs = date.getSeconds();\r\n\r\n  const now = new Date();\r\n  const ny = now.getFullYear();\r\n  const nM = now.getMonth();\r\n  const nd = now.getDay();\r\n  const nh = now.getHours();\r\n  const nm = now.getMinutes();\r\n  const ns = now.getSeconds();\r\n\r\n  if (ny - fy > 0) return `${ny - fy} năm trước`;\r\n  if (nM - fM > 0) return `${nM - fM} tháng trước`;\r\n  if (nd - fd > 0) return `${nd - fd} ngày trước`;\r\n  if (nh - fh > 0) return `${nh - fh} giờ trước`;\r\n  if (nm - fm > 0) return `${nm - fm} phút trước`;\r\n  if (ns - fs > 0) return `${ns - fs} giây trước`;\r\n};\r\n\r\nexport const momentFromNow = (m) => {\r\n  const date = moment(m);\r\n  const fy = date.year();\r\n  const fM = date.month();\r\n  const fd = date.day();\r\n  const fh = date.hour();\r\n  const fm = date.minute();\r\n  const fs = date.second();\r\n\r\n  const now = moment();\r\n  const ny = now.year();\r\n  const nM = now.month();\r\n  const nd = now.day();\r\n  const nh = now.hour();\r\n  const nm = now.minute();\r\n  const ns = now.second();\r\n\r\n  if (ny - fy > 0) return `${ny - fy} năm`;\r\n  if (nM - fM > 0) return `${nM - fM} tháng`;\r\n  if (nd - fd > 0) return `${nd - fd} ngày`;\r\n  if (nh - fh > 0) return `${nh - fh} giờ`;\r\n  if (nm - fm > 0) return `${nm - fm} phút`;\r\n  if (ns - fs > 0) return `${ns - fs} giây`;\r\n};\r\n\r\nexport const getImg = (avatar) => {\r\n  return avatar\r\n    ? `${clientUtils.serverApi}/files/${avatar}`\r\n    : \"https://static.toiimg.com/photo/82343395.cms\";\r\n};\r\n\r\nNumber.prototype.formatPrice = function () {\r\n  return this.toFixed(2)\r\n    .replace(/(\\d)(?=(\\d{3})+\\.)/g, \"$1,\")\r\n    .replace(\".00\", \"\")\r\n    .replace(/,/g, \".\");\r\n};\r\nString.prototype.formatPrice = function () {\r\n  try {\r\n    return parseInt(this)\r\n      .toFixed(2)\r\n      .replace(/(\\d)(?=(\\d{3})+\\.)/g, \"$1,\")\r\n      .replace(\".00\", \"\")\r\n      .replace(/,/g, \".\");\r\n  } catch (error) {}\r\n  return this;\r\n};\r\n\r\nexport function dataURLtoFile(dataurl, filename) {\r\n  var arr = dataurl.split(\",\"),\r\n    mime = arr[0].match(/:(.*?);/)[1],\r\n    bstr = atob(arr[1]),\r\n    n = bstr.length,\r\n    u8arr = new Uint8Array(n);\r\n  while (n--) {\r\n    u8arr[n] = bstr.charCodeAt(n);\r\n  }\r\n  return new File([u8arr], filename, { type: mime });\r\n}\r\n\r\nexport const getAuditInfo = (data) => {\r\n  var module = {\r\n    options: [],\r\n    header: [\r\n      navigator.platform,\r\n      navigator.userAgent,\r\n      navigator.appVersion,\r\n      navigator.vendor,\r\n      window.opera,\r\n    ],\r\n    dataos: [\r\n      { name: \"Windows Phone\", value: \"Windows Phone\", version: \"OS\" },\r\n      { name: \"Windows\", value: \"Win\", version: \"NT\" },\r\n      { name: \"iPhone\", value: \"iPhone\", version: \"OS\" },\r\n      { name: \"iPad\", value: \"iPad\", version: \"OS\" },\r\n      { name: \"Kindle\", value: \"Silk\", version: \"Silk\" },\r\n      { name: \"Android\", value: \"Android\", version: \"Android\" },\r\n      { name: \"PlayBook\", value: \"PlayBook\", version: \"OS\" },\r\n      { name: \"BlackBerry\", value: \"BlackBerry\", version: \"/\" },\r\n      { name: \"Macintosh\", value: \"Mac\", version: \"OS X\" },\r\n      { name: \"Linux\", value: \"Linux\", version: \"rv\" },\r\n      { name: \"Palm\", value: \"Palm\", version: \"PalmOS\" },\r\n    ],\r\n    databrowser: [\r\n      { name: \"Edge\", value: \"Edg\", version: \"Edg\" },\r\n      { name: \"Chrome\", value: \"Chrome\", version: \"Chrome\" },\r\n      { name: \"Firefox\", value: \"Firefox\", version: \"Firefox\" },\r\n      { name: \"Safari\", value: \"Safari\", version: \"Version\" },\r\n      { name: \"Internet Explorer\", value: \"MSIE\", version: \"MSIE\" },\r\n      { name: \"Opera\", value: \"Opera\", version: \"Opera\" },\r\n      { name: \"BlackBerry\", value: \"CLDC\", version: \"CLDC\" },\r\n      { name: \"Mozilla\", value: \"Mozilla\", version: \"Mozilla\" },\r\n    ],\r\n    init: function () {\r\n      var agent = this.header.join(\" \"),\r\n        os = this.matchItem(agent, this.dataos),\r\n        browser = this.matchItem(agent, this.databrowser);\r\n\r\n      return { os: os, browser: browser };\r\n    },\r\n    matchItem: function (string, data) {\r\n      var i = 0,\r\n        j = 0,\r\n        html = \"\",\r\n        regex,\r\n        regexv,\r\n        match,\r\n        matches,\r\n        version;\r\n\r\n      for (i = 0; i < data.length; i += 1) {\r\n        regex = new RegExp(data[i].value, \"i\");\r\n        match = regex.test(string);\r\n        if (match) {\r\n          regexv = new RegExp(data[i].version + \"[- /:;]([\\\\d._]+)\", \"i\");\r\n          matches = string.match(regexv);\r\n          version = \"\";\r\n          if (matches) {\r\n            if (matches[1]) {\r\n              matches = matches[1];\r\n            }\r\n          }\r\n          if (matches) {\r\n            matches = matches.split(/[._]+/);\r\n            for (j = 0; j < matches.length; j += 1) {\r\n              if (j === 0) {\r\n                version += matches[j] + \".\";\r\n              } else {\r\n                version += matches[j];\r\n              }\r\n            }\r\n          } else {\r\n            version = \"0\";\r\n          }\r\n          return {\r\n            name: data[i].name,\r\n            version: parseFloat(version),\r\n          };\r\n        }\r\n      }\r\n      return { name: \"unknown\", version: 0 };\r\n    },\r\n  };\r\n  var e = module.init();\r\n\r\n  return {\r\n    ip: data.IPv4,\r\n    nameDevice: `${e.os.name} ${e.os.version}`,\r\n    address: `${data.city}, ${data.country_name}`,\r\n    application: e.browser.name,\r\n  };\r\n};\r\n\r\nexport { combineUrlParams, parseUrlParams, timeFromNow };\r\n","D:\\project-react\\react-js-friend-chat\\src\\layouts\\public\\styled.js",[],"D:\\project-react\\react-js-friend-chat\\src\\views\\routes.js",[],"D:\\project-react\\react-js-friend-chat\\src\\utils\\client-utils.js",["483","484"],"export const UrlServer = () => {\r\n  const domain = global.origin;\r\n  const localhost = true;\r\n\r\n  // switch (domain) {\r\n  //   case \"http://45.13.132.247:1234\": // server host\r\n  //     return \"http://45.13.132.247:8082\";\r\n  //   case \"http://localhost:3000\": // localhost\r\n  //     return localhost ? \"http://localhost:8880\" : \"http://45.13.132.247:8800\";\r\n  // }\r\n  return localhost ? \"http://localhost:8800\" : \"http://45.13.132.247:8800\";\r\n};\r\n\r\nexport default {\r\n  auth: \"\",\r\n  token: \"\",\r\n  serverApi: UrlServer(),\r\n  requestApi(methodType, url, body, ignoreAuth) {\r\n    return new Promise((resolve, reject) => {\r\n      if (!body) body = {};\r\n      if (methodType.toLowerCase() !== \"get\") {\r\n        body = JSON.stringify(body);\r\n      }\r\n      this.requestFetch(\r\n        methodType,\r\n        url && url.indexOf(\"http\") === 0 ? url : url,\r\n        ignoreAuth\r\n          ? {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n            }\r\n          : {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: this.auth,\r\n            },\r\n        body\r\n      )\r\n        .then((s) => {\r\n          s.json()\r\n            .then((val) => {\r\n              if (val.code === 401) {\r\n                // localStorage.clear();\r\n                // window.location.href = \"/auth/login\";\r\n              }\r\n              resolve(val);\r\n            })\r\n            .catch((e) => {\r\n              reject(e);\r\n            });\r\n        })\r\n        .catch((e) => {\r\n          if (e && e.status === 401) {\r\n            localStorage.clear();\r\n            // window.location.href = \"/auth/login\";\r\n          }\r\n          reject(e);\r\n        });\r\n    });\r\n  },\r\n  requestFetch(methodType, url, headers, body) {\r\n    return new Promise((resolve, reject) => {\r\n      let fetchParam = {\r\n        method: methodType,\r\n        headers,\r\n      };\r\n\r\n      if (methodType.toLowerCase() !== \"get\") {\r\n        fetchParam.body = body;\r\n      }\r\n      return fetch(UrlServer() + url, fetchParam)\r\n        .then((json) => {\r\n          if (!json.ok) {\r\n            reject(json);\r\n          } else resolve(json);\r\n        })\r\n        .catch((e) => {\r\n          reject(e);\r\n        });\r\n    });\r\n  },\r\n  upload(methodType, url, form) {\r\n    return new Promise((resolve, reject) => {\r\n      return this.requestFetch(\r\n        methodType,\r\n        url && url.indexOf(\"http\") === 0 ? url : url,\r\n        {\r\n          Authorization: this.auth,\r\n        },\r\n        form\r\n      )\r\n        .then((s) => {\r\n          s.json()\r\n            .then((val) => {\r\n              if (val.code === 401) {\r\n                localStorage.clear();\r\n                // window.location.href = \"/auth/login\";\r\n              }\r\n              resolve(val);\r\n            })\r\n            .catch((e) => {\r\n              reject(e);\r\n            });\r\n        })\r\n        .catch((e) => {\r\n          if (e && e.status === 401) {\r\n            localStorage.clear();\r\n            // window.location.href = \"/auth/login\";\r\n          }\r\n          reject(e);\r\n        });\r\n    });\r\n  },\r\n};\r\n","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\container\\login-modal.js",[],"D:\\project-react\\react-js-friend-chat\\src\\redux\\models\\index.js",[],"D:\\project-react\\react-js-friend-chat\\src\\layouts\\header\\index.js",[],"D:\\project-react\\react-js-friend-chat\\src\\views\\public\\chat\\components\\modal.js",[],"D:\\project-react\\react-js-friend-chat\\src\\views\\public\\chat\\index.js",["485","486","487","488","489","490","491","492","493","494","495","496","497"],"import fileProvider from \"@src/data-access/file-provider\";\r\nimport { dataURLtoFile, momentFromNow } from \"@src/utils/common\";\r\nimport { getImg } from \"@utils/common\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Message from \"./components/message\";\r\nimport { WrapperStyled } from \"./styled\";\r\n\r\nlet countFile = 1;\r\n\r\nconst ChatContainer = ({\r\n  auth,\r\n  listRoom,\r\n  listMessage,\r\n  listAllUser,\r\n  currentRoomId,\r\n  currentRoom,\r\n  createRoom,\r\n  getAllUser,\r\n  addUser,\r\n  updateData,\r\n  sendMessage,\r\n  getListMessage,\r\n  changeAvatar,\r\n}) => {\r\n  const [state, _setState] = useState({ content: \"\", listFile: [] });\r\n  const setState = (data) => {\r\n    _setState((pre) => ({ ...pre, ...data }));\r\n  };\r\n  useEffect(() => {\r\n    getAllUser();\r\n  }, []);\r\n  const handleCreate = () => {\r\n    createRoom();\r\n  };\r\n  const handleAddUser = (idUser) => () => {\r\n    addUser(idUser);\r\n  };\r\n  const selectRoom = (room) => () => {\r\n    updateData({ currentRoomId: room?.id, currentRoom: room });\r\n    getListMessage(room?.id);\r\n  };\r\n  const onPasteClipboard = (pasteEvent) => {\r\n    var item = pasteEvent.clipboardData.items[0];\r\n\r\n    if (item.type.indexOf(\"image\") === 0) {\r\n      var blob = item.getAsFile();\r\n\r\n      var reader = new FileReader();\r\n      reader.onload = function (event) {\r\n        var image = new Image();\r\n\r\n        image.src = reader.result;\r\n        if (state.listFile?.length === 0) {\r\n          setTimeout(() => {\r\n            document.getElementById(\"id-content-chat-message\")?.scrollIntoView({\r\n              block: \"end\",\r\n              behavior: \"smooth\",\r\n            });\r\n          }, 200);\r\n        }\r\n        image.onload = function () {\r\n          setState({\r\n            listFile: [\r\n              ...state.listFile,\r\n              {\r\n                src: event.target.result,\r\n                autoW: image.width > image.height,\r\n                image: dataURLtoFile(\r\n                  event.target.result,\r\n                  `clipboard${moment().format(\r\n                    \"YYYY_MM_DD_HH_mm_ss\"\r\n                  )}__${countFile++}`\r\n                ),\r\n                reader,\r\n              },\r\n            ],\r\n          });\r\n        };\r\n      };\r\n\r\n      reader.readAsDataURL(blob);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WrapperStyled>\r\n      <div className=\"main-left\">\r\n        <div className=\"room-header\">\r\n          <div className=\"room-header-title\">Chat</div>\r\n          <div className=\"room-header-top\">\r\n            <div className=\"room-header-top-img\">\r\n              <label htmlFor=\"upload-avatar\">\r\n                <img src={getImg(auth?.image)} />\r\n              </label>\r\n            </div>\r\n            <div className=\"room-header-top-name\">{auth?.full_name}</div>\r\n            <input\r\n              id=\"upload-avatar\"\r\n              type=\"file\"\r\n              onChange={(e) => {\r\n                const [file] = e.target.files;\r\n                debugger;\r\n                // changeAvatar(file);\r\n              }}\r\n            />\r\n            <i\r\n              className=\"fa-solid fa-pen-to-square\"\r\n              onClick={() => {\r\n                setState({ createRoom: true });\r\n              }}\r\n            ></i>\r\n          </div>\r\n        </div>\r\n        <div className=\"room-group\">\r\n          {listRoom?.map((item, idx) => (\r\n            <div key={idx} className=\"room-item\" onClick={selectRoom(item)}>\r\n              <div className=\"room-item-img\">\r\n                <img src={getImg(item?.admin?.avatar)} />\r\n              </div>\r\n              <div className=\"room-item-content\">\r\n                <div className=\"room-item-content-user\">Room {item.id}</div>\r\n                <div className=\"room-item-content-message\">\r\n                  {item?.lastMessage?.fullName && (\r\n                    <span>\r\n                      {item?.lastMessage?.fullName?.substring(\r\n                        item?.lastMessage?.fullName.length - 5\r\n                      )}\r\n                      :{\" \"}\r\n                    </span>\r\n                  )}\r\n                  <span>{item?.lastMessage?.content} </span>\r\n                  <span>\r\n                    . {item.createdAt && momentFromNow(item.createdAt)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"main-center\">\r\n        <div className=\"main-center-top\">\r\n          <div className=\"main-center-top-img\">\r\n            <img src={getImg(currentRoom?.avatar)} />\r\n          </div>\r\n          <div className=\"main-center-top-name\">{currentRoom?.id}</div>\r\n        </div>\r\n        <div\r\n          className={`main-center-mid ${\r\n            state.listFile?.length > 0 ? \"main-center-mid-visible-file\" : \"\"\r\n          }`}\r\n        >\r\n          <div id=\"id-content-chat-message\" className=\"content-message\">\r\n            {listMessage.map((item, idx) => (\r\n              <Message\r\n                key={idx}\r\n                data={item}\r\n                front={listMessage[idx - 1]?.fromId === item.fromId}\r\n                end={listMessage[idx + 1]?.fromId === item.fromId}\r\n                numberLike={listMessage[idx + 1]?.numberLike}\r\n                listMessage={listMessage}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {currentRoomId && (\r\n          <div\r\n            className={`main-center-bottom ${\r\n              state.listFile?.length > 0\r\n                ? \"main-center-bottom-visible-file\"\r\n                : \"\"\r\n            }`}\r\n          >\r\n            {/* <div className=\"bottom-tools\">\r\n            <div className=\"bottom-tools-item\">+</div>\r\n            <div className=\"bottom-tools-item\">+</div>\r\n            <div className=\"bottom-tools-item\">+</div>\r\n            <div className=\"bottom-tools-item\">+</div>\r\n          </div> */}\r\n            <div className=\"bottom-input-message\">\r\n              <div\r\n                className={`message-file ${\r\n                  state.listFile?.length > 0 ? \"message-file-over\" : \"\"\r\n                }`}\r\n              >\r\n                {state.listFile.map((item, idx) => (\r\n                  <div className=\"message-file-item\">\r\n                    <div className=\"file-item_img\">\r\n                      <img\r\n                        id=\"img-clipboard\"\r\n                        src={item.src}\r\n                        className={`${item.autoW ? \"auto-w\" : \"auto-h\"}`}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      className=\"file-item_icon-remove\"\r\n                      onClick={() => {\r\n                        setState({\r\n                          listFile: state.listFile.filter((_, i) => i != idx),\r\n                        });\r\n                      }}\r\n                    >\r\n                      <i className=\"fa-solid fa-xmark\"></i>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <input\r\n                // contentEditable=\"true\"\r\n                onPaste={onPasteClipboard}\r\n                placeholder=\"Aa\"\r\n                value={state.content}\r\n                onKeyDown={(e) => {\r\n                  if (e.key == \"Enter\") {\r\n                    if (!!state.content) {\r\n                      sendMessage({ content: state.content, type: 1 });\r\n                      setState({ content: \"\" });\r\n                    }\r\n                    if (state.listFile.length > 0) {\r\n                      Promise.all(\r\n                        state.listFile.map((file) =>\r\n                          fileProvider.upload(file.image)\r\n                        )\r\n                      ).then((res) => {\r\n                        sendMessage({\r\n                          content: JSON.stringify(\r\n                            res.map((i) => i.data?.filePath)\r\n                          ),\r\n                          type: 2,\r\n                        });\r\n                        setState({ listFile: [] });\r\n                      });\r\n                    }\r\n                  }\r\n                }}\r\n                onChange={(e) => setState({ content: e.target?.value })}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"main-right\">\r\n        <div className=\"main-right-header\">\r\n          <div className=\"main-center-top-img\">\r\n            <img src=\"https://akisa.vn/uploads/plugin/product_items/13551/mau-biet-thu-nha-dep-2-tang-hien-dai-bt21377-v2.jpg\" />\r\n          </div>\r\n          <div className=\"main-right-header-name\">Nhóm học thêm</div>\r\n        </div>\r\n        <div className=\"main-right-body\">\r\n          <div className=\"collapse-tool-title\">Xem thành viên nhóm</div>\r\n          {currentRoomId && (\r\n            <div className=\"list-user\">\r\n              <div\r\n                className=\"list-user-item\"\r\n                // onClick={handleAddUser(item.id)}\r\n              >\r\n                <div className=\"list-user-item-img\">\r\n                  <img src={getImg(currentRoom?.admin?.avatar)} />\r\n                </div>\r\n                <div className=\"list-user-item-content\">\r\n                  <div className=\"list-user-item-content-user\">\r\n                    {currentRoom?.admin?.fullName}\r\n                  </div>\r\n                  <div className=\"list-user-item-content-message\">\r\n                    <span>Quản trị viên</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {currentRoom?.connectedUsers?.map((item, key) => (\r\n                <div\r\n                  key={key}\r\n                  className=\"list-user-item\"\r\n                  // onClick={handleAddUser(item.id)}\r\n                >\r\n                  <div className=\"list-user-item-img\">\r\n                    <img src={getImg(item?.avatar)} />\r\n                  </div>\r\n                  <div className=\"list-user-item-content\">\r\n                    <div className=\"list-user-item-content-user\">\r\n                      {item.fullName}\r\n                    </div>\r\n                    <div className=\"list-user-item-content-message\">\r\n                      <span></span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n              <div className=\"list-user-item\">\r\n                <div className=\"list-user-item-img\">\r\n                  <i className=\"fa-solid fa-plus\"></i>\r\n                  {/* <img src=\"https://akisa.vn/uploads/plugin/product_items/13551/mau-biet-thu-nha-dep-2-tang-hien-dai-bt21377-v2.jpg\" /> */}\r\n                </div>\r\n                <div className=\"list-user-item-content\">\r\n                  <div className=\"list-user-item-content-user\">\r\n                    Thêm thành viên\r\n                  </div>\r\n                  <div className=\"list-user-item-content-message\">\r\n                    <span></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* <div className=\"collapse-tool-title\">Thêm thành viên nhóm</div>\r\n          {currentRoomId && (\r\n            <div className=\"list-user\">\r\n              {listAllUser.map((item, key) => (\r\n                <div\r\n                  key={key}\r\n                  className=\"list-user-item\"\r\n                  onClick={handleAddUser(item.id)}\r\n                >\r\n                  <div className=\"list-user-item-img\">\r\n                    <img src={getImg(item?.avatar)} />\r\n                  </div>\r\n                  <div className=\"list-user-item-content\">\r\n                    <div className=\"list-user-item-content-user\">\r\n                      {item.fullName}\r\n                    </div>\r\n                    <div className=\"list-user-item-content-message\">\r\n                      <span></span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )} */}\r\n        </div>\r\n      </div>\r\n    </WrapperStyled>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({\r\n    socket: { currentRoomId, listRoom, listAllUser, listMessage, currentRoom },\r\n    auth: { auth },\r\n  }) => ({\r\n    auth,\r\n    currentRoomId,\r\n    currentRoom,\r\n    listRoom,\r\n    listMessage,\r\n    listAllUser,\r\n  }),\r\n  ({\r\n    auth: { changeAvatar },\r\n    socket: {\r\n      createRoom,\r\n      getAllUser,\r\n      addUser,\r\n      sendMessage,\r\n      getListMessage,\r\n      updateData,\r\n    },\r\n  }) => ({\r\n    createRoom,\r\n    getAllUser,\r\n    addUser,\r\n    getListMessage,\r\n    updateData,\r\n    sendMessage,\r\n    changeAvatar,\r\n  })\r\n)(ChatContainer);\r\n","D:\\project-react\\react-js-friend-chat\\src\\layouts\\header\\styled.js",[],"D:\\project-react\\react-js-friend-chat\\src\\views\\public\\home\\index.js",["498","499","500","501"],"// import \"@assets/css/font-awesome.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Post from \"./components/post\";\r\nimport { WrapperStyled } from \"./styled\";\r\n\r\nconst Home = ({ auth, getUser, getlistBaiViet, listBaiViet, updateData }) => {\r\n  // const [state, _setState] = useState({\r\n  //   showModalPost: false,\r\n  // });\r\n  const setState = (data) => {};\r\n  //   _setState((pre) => ({ ...pre, ...data }));\r\n  // };\r\n\r\n  useEffect(() => {\r\n    getlistBaiViet({ size: 20 });\r\n    // getUser();\r\n  }, []);\r\n\r\n  return (\r\n    <WrapperStyled>\r\n      <div className=\"container__adver-left\">\r\n        <a href=\"\" className=\"container__adver-link\">\r\n          <img\r\n            src={require(\"@assets/images/qc2.png\").default}\r\n            alt=\"\"\r\n            className=\"container__adver-img\"\r\n          />\r\n        </a>\r\n      </div>\r\n      <div className=\"container__body\">\r\n        <div className=\"container__body--main\">\r\n          {auth && auth.type === 2 && (\r\n            <button\r\n              className=\"container__body--postbtn js-container__body--postbtn\"\r\n              onClick={() => {\r\n                setState({ showModalPost: true });\r\n              }}\r\n            >\r\n              Bạn đang nghĩ gì?\r\n            </button>\r\n          )}\r\n          {[1, 2, 3].map((item, idx) => (\r\n            <Post\r\n              key={idx}\r\n              onEdit={() => {\r\n                updateData({ _dataEdit: item });\r\n                setState({ showModalPost: true });\r\n              }}\r\n              {...item}\r\n            />\r\n          ))}\r\n          {(listBaiViet || []).length === 0 && (\r\n            <div>Không tìm thấy kết quả</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"container__adver-right\">\r\n        <a href=\"\" className=\"container__adver-link\">\r\n          <img\r\n            src={require(\"@assets/images/qc2.png\").default}\r\n            alt=\"\"\r\n            className=\"container__adver-img\"\r\n          />\r\n        </a>\r\n      </div>\r\n      {/* {state.showModalPost && (\r\n        <ModalCreatePost\r\n          onClose={() => {\r\n            setState({ showModalPost: false });\r\n            updateData({ _dataEdit: {} });\r\n          }}\r\n          afterPost={() => {\r\n            setState({ showModalPost: false });\r\n            getlistBaiViet();\r\n          }}\r\n        />\r\n      )} */}\r\n    </WrapperStyled>\r\n  );\r\n};\r\nexport default connect(\r\n  ({ auth: { auth }, post: { listData: listBaiViet = [] } }) => ({\r\n    auth,\r\n    listBaiViet,\r\n  }),\r\n  ({\r\n    post: { search: getlistBaiViet, updateData },\r\n    // account: { getUser },\r\n  }) => ({\r\n    getlistBaiViet,\r\n    updateData,\r\n    // getUser,\r\n  })\r\n)(Home);\r\n","D:\\project-react\\react-js-friend-chat\\src\\layouts\\authorization\\index.js",[],"D:\\project-react\\react-js-friend-chat\\src\\views\\public\\setting\\index.js",[],"D:\\project-react\\react-js-friend-chat\\src\\views\\public\\setting\\loginSecure\\index.js",["502"],"import { momentFromNow } from \"@src/utils/common\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport VerifyModal from \"../../container/verify-modal\";\r\nimport List from \"./list\";\r\nimport { WrapperStyled } from \"./styled\";\r\n\r\nconst LoginSecure = ({\r\n  deviceInfo,\r\n  getCurrentUser,\r\n  listCurrentUser,\r\n  onLogoutDevice,\r\n}) => {\r\n  const [state, _setState] = useState({});\r\n  const setState = (data) => {\r\n    _setState((pre) => ({ ...pre, ...data }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (deviceInfo?.ip) getCurrentUser();\r\n  }, [deviceInfo]);\r\n  console.log(listCurrentUser, \"listCurrentUser\");\r\n\r\n  const render = {\r\n    renderLine1: (_, item) =>\r\n      `${item.nameDevice} . ${item.address} . ${item.ip}`,\r\n    renderLine2: (_, item) =>\r\n      item.current ? (\r\n        <span>\r\n          {item.application}\r\n          <span className=\"is-active\"> . Đang hoạt động</span>\r\n        </span>\r\n      ) : (\r\n        `${item.application} . ${momentFromNow(item.updatedAt)}`\r\n      ),\r\n    renderTool: (item) =>\r\n      item.current ? (\r\n        <></>\r\n      ) : (\r\n        <i\r\n          className=\"fa-solid fa-right-from-bracket\"\r\n          onClick={() => {\r\n            setState({ visible: true, id: item.id });\r\n          }}\r\n        ></i>\r\n      ),\r\n  };\r\n\r\n  return (\r\n    <WrapperStyled>\r\n      <VerifyModal\r\n        visible={state.visible}\r\n        onSubmit={({ password }) => {\r\n          onLogoutDevice({ id: state.id, password });\r\n          setState({ visible: false });\r\n        }}\r\n      />\r\n      <div className=\"wrapper-container-main\">\r\n        <List\r\n          title=\"Nơi bạn đã đăng nhập\"\r\n          render={render}\r\n          dataSource={listCurrentUser}\r\n        ></List>\r\n      </div>\r\n    </WrapperStyled>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ deviceInfo: { listCurrentUser = [], info: deviceInfo } }) => ({\r\n    listCurrentUser,\r\n    deviceInfo,\r\n  }),\r\n  ({ deviceInfo: { getCurrentUser, onLogoutDevice } }) => ({\r\n    getCurrentUser,\r\n    onLogoutDevice,\r\n  })\r\n)(LoginSecure);\r\n","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\map\\index.js",["503"],"import L from \"leaflet\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport MapComponent from \"./MapComponent\";\r\nimport geoData from \"./gadm.json\";\r\n// import \"./styles.scss\";\r\n\r\nconst MapWrapper = () => {\r\n  const center = [15.8828276, 107.590866];\r\n  const refGeoJson = useRef();\r\n  const map = useRef();\r\n  // const [map, setMap] = useState();\r\n  const [state, _setState] = useState({\r\n    geoData: [],\r\n    showLeftBottom: true,\r\n  });\r\n  const setState = (data) => {\r\n    _setState((pre) => ({ ...pre, ...data }));\r\n  };\r\n\r\n  const onVisiblePopup = useCallback(({ item, ...data }) => {\r\n    setState(data);\r\n    map?.current?.panTo(new L.LatLng(item.toaDo[0], item.toaDo[1]));\r\n  }, []);\r\n\r\n  const handleGadmJson = () => {\r\n    return (\r\n      {\r\n        type: \"FeatureCollection\",\r\n        features: geoData.reduce(\r\n          (acc, geo, index) => [\r\n            ...acc,\r\n            ...geo.location.map((i, idx) => ({\r\n              type: \"Feature\",\r\n              properties: { id: `${index}_${idx}`, title: geo.city },\r\n              id: `${index}_${idx}`,\r\n              geometry: {\r\n                type: \"Polygon\",\r\n                coordinates: [\r\n                  i.map((j) => {\r\n                    return [j.lng, j.lat];\r\n                  }),\r\n                ],\r\n              },\r\n            })),\r\n          ],\r\n          []\r\n        ),\r\n      } || {}\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      const newGeoState = {\r\n        type: \"FeatureCollection\",\r\n        features: handleGadmJson().features.map((geo) => {\r\n          return {\r\n            ...geo,\r\n            properties: {\r\n              ...geo.properties,\r\n              color: \"maroon\",\r\n            },\r\n          };\r\n        }),\r\n      };\r\n\r\n      setState({ geoData: newGeoState });\r\n      refGeoJson.current?.clearLayers();\r\n      refGeoJson.current?.addData(newGeoState);\r\n      console.log(refGeoJson, \"refGeoJson\");\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <MapComponent\r\n      dataPoints={state.dataPoints}\r\n      checks={state.checks}\r\n      map={map}\r\n      refGeoJson={refGeoJson}\r\n      onVisiblePopup={onVisiblePopup}\r\n      visibleCircle={state.scope}\r\n      centerFocus={state.centerFocus}\r\n      range={state.range}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MapWrapper;\r\n","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\chat\\components\\styled.js",[],"D:\\project-react\\react-js-friend-chat\\src\\redux\\models\\cache\\index.js",[],"D:\\project-react\\react-js-friend-chat\\src\\redux\\models\\auth\\index.js",[],"D:\\project-react\\react-js-friend-chat\\src\\redux\\models\\device-info\\index.js",["504"],"import fetchProvider from \"@data-access/device-info-provider\";\r\nimport { getAuditInfo } from \"@src/utils/common\";\r\nimport { toast } from \"react-toastify\";\r\nimport baseStore from \"../base-store\";\r\n\r\nconst compare = (data1, data2) => {\r\n  return (\r\n    data1?.ip === data2?.ip &&\r\n    data1?.nameDevice === data2?.nameDevice &&\r\n    data1?.address === data2?.address &&\r\n    data1?.application === data2?.application\r\n  );\r\n};\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport default {\r\n  ...baseStore({\r\n    fetchProvider,\r\n    storeName: \"deviceInfo\",\r\n    title: \"Lịch sử đăng nhập\",\r\n    initState: { size: 20, listCurrentUser: [] },\r\n    customEffect: ({ dispatch }) => ({\r\n      getDeviceInfo: () => {\r\n        fetchProvider.getIp().then((res) => {\r\n          dispatch.deviceInfo.updateData({ info: getAuditInfo(res) });\r\n        });\r\n      },\r\n      getCurrentUser: (payload, { auth: { auth }, deviceInfo: { info } }) => {\r\n        fetchProvider\r\n          .search({ page: 0, size: 99, accountId: auth.userId })\r\n          .then((res) => {\r\n            if (res && res.code === 0) {\r\n              dispatch.deviceInfo.updateData({\r\n                listCurrentUser: res.data.map((item) =>\r\n                  compare(item, info) ? { ...item, current: true } : item\r\n                ),\r\n              });\r\n            }\r\n          });\r\n      },\r\n      logoutDevice: (data, { deviceInfo: { info, listCurrentUser } }) => {\r\n        dispatch.deviceInfo.updateData({\r\n          listCurrentUser: listCurrentUser.filter(\r\n            (item) => item.id !== data?.id\r\n          ),\r\n        });\r\n      },\r\n      onLogoutDevice: (\r\n        { id, password },\r\n        { auth: { auth }, socket: { stompClient } }\r\n      ) => {\r\n        const body = {\r\n          username: auth.username,\r\n          password,\r\n        };\r\n        stompClient?.send(`/app/logout.device.${id}`, {}, JSON.stringify(body));\r\n      },\r\n    }),\r\n  }),\r\n};\r\n","D:\\project-react\\react-js-friend-chat\\src\\redux\\models\\socket\\index.js",[],"D:\\project-react\\react-js-friend-chat\\src\\redux\\models\\post\\index.js",[],"D:\\project-react\\react-js-friend-chat\\src\\views\\public\\chat\\styled.js",[],"D:\\project-react\\react-js-friend-chat\\src\\views\\public\\chat\\components\\message.js",["505","506","507","508","509","510"],"import React, { useMemo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getImg } from \"@utils/common\";\r\n\r\nconst listEmoji = [\r\n  \"https://static.xx.fbcdn.net/images/emoji.php/v9/tf3/1.5/16/2764.png\",\r\n  \"https://static.xx.fbcdn.net/images/emoji.php/v9/te7/1.5/32/1f606.png\",\r\n  \"https://static.xx.fbcdn.net/images/emoji.php/v9/td4/1.5/32/1f62e.png\",\r\n  \"https://static.xx.fbcdn.net/images/emoji.php/v9/t1f/1.5/32/1f620.png\",\r\n  \"https://static.xx.fbcdn.net/images/emoji.php/v9/tf/1.5/32/1f44d.png\",\r\n];\r\n\r\nconst Message = ({\r\n  data = {},\r\n  front,\r\n  end,\r\n  numberLike = 2,\r\n  auth,\r\n  sendEmoji,\r\n}) => {\r\n  const emojiIcon = useMemo(() => {\r\n    const setEmoji = new Set();\r\n    for (let i = 0; i < data.listEmoji?.length; i++) {\r\n      setEmoji.add(data.listEmoji[i].type);\r\n      if (setEmoji.length > 2) break;\r\n    }\r\n    return Array.from(setEmoji);\r\n  }, [data.listEmoji]);\r\n\r\n  const listImage = data?.type === 2 ? JSON.parse(data.content) : [];\r\n\r\n  return (\r\n    <div\r\n      className={`content-message-item ${\r\n        front\r\n          ? end\r\n            ? \"content-message-item-mid\"\r\n            : \"content-message-item-front\"\r\n          : end\r\n          ? \"content-message-item-end\"\r\n          : \"\"\r\n      } ${\r\n        auth.userId === data.fromId\r\n          ? \"content-message-item-send\"\r\n          : \"content-message-item-receive\"\r\n      } ${\r\n        data?.listEmoji?.length && !data?.listLastSeen?.length\r\n          ? \"content-message-item-react\"\r\n          : \"\"\r\n      }`}\r\n    >\r\n      {auth.userId !== data.fromId && (\r\n        <div className=\"main-center-top-img\">\r\n          {!end && <img src={getImg(data?.avatar)} />}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"wrapper-data\">\r\n        <div className={`user-name-send`}>\r\n          {auth.userId !== data.fromId && !front && data.fullName}\r\n        </div>\r\n        {data?.type === 2 ? (\r\n          <div className=\"list-image\">\r\n            {listImage.map((item, idx) => (\r\n              <div key={idx} className=\"list-image-item\">\r\n                <img\r\n                  onLoad={function (e) {\r\n                    const { className, width, height } = e.target;\r\n                    e.target.className = `${className} ${\r\n                      width > height ? \"auto-w\" : \"auto-h\"\r\n                    }`;\r\n                  }}\r\n                  src={getImg(item)}\r\n                  className=\"content-message-item_image\"\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className={`wrapper-data-content`}>\r\n            {data.content}\r\n            {data?.listEmoji?.length > 0 && (\r\n              <div\r\n                className={`react-message ${\r\n                  auth.userId === data.fromId ? \"react-message-send\" : \"\"\r\n                }`}\r\n              >\r\n                <div>\r\n                  {emojiIcon?.map((i, j) => (\r\n                    <img key={j} src={listEmoji[i - 1]} />\r\n                  ))}\r\n                </div>\r\n                <div>{data?.listEmoji?.length}</div>\r\n              </div>\r\n            )}\r\n            <div\r\n              className={`react-message-option ${\r\n                auth.userId == data.fromId && \"react-message-option-send\"\r\n              }`}\r\n            >\r\n              {listEmoji.map((item, key) => (\r\n                <div key={key} className=\"react-message-option-wrapper\">\r\n                  <img\r\n                    className=\"react-message-option-status\"\r\n                    src={item}\r\n                    onClick={() =>\r\n                      sendEmoji({ type: key + 1, messageId: data.id })\r\n                    }\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div\r\n          className={`list-last-seen ${\r\n            auth.userId === data.fromId && \"list-last-seen-send\"\r\n          } ${data?.listLastSeen?.length > 0 ? \"list-last-seen-like\" : \"\"}`}\r\n        >\r\n          {data?.listLastSeen?.map((item, idx) => (\r\n            <div key={idx} className=\"list-last-seen-item\">\r\n              <div className=\"list-last-seen-item-child\">\r\n                <img src={getImg(item?.account?.avatar)} />\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {!!data?.listLastSeen?.length && (\r\n            <div className=\"list-last-seen-item list-last-seen-item-content\">\r\n              Đã xem\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ auth: { auth } }) => ({ auth }),\r\n  ({ socket: { sendEmoji } }) => ({ sendEmoji })\r\n)(Message);\r\n","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\home\\styled.js",["511"],"D:\\project-react\\react-js-friend-chat\\src\\utils\\index.js",[],"D:\\project-react\\react-js-friend-chat\\src\\views\\public\\setting\\styled.js",[],"D:\\project-react\\react-js-friend-chat\\src\\views\\public\\container\\verify-modal.js",["512"],"import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from \"styled-components\";\r\nimport Modal from \"../chat/components/modal\";\r\n\r\nconst WrapperLogin = styled.div`\r\n  .md-login-header {\r\n    text-align: center;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    margin-bottom: 20px;\r\n    background-color: #2b2b2b;\r\n    color: white;\r\n    padding: 5px;\r\n  }\r\n  .md-login-body {\r\n    margin-bottom: 10px;\r\n    &-input {\r\n      padding: 10px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      text-align: center;\r\n      input {\r\n        margin: 0 auto;\r\n        width: 60%;\r\n        border-radius: 5px;\r\n        height: 35px;\r\n        border: 1px solid #ccc;\r\n        padding: 0 15px;\r\n        outline: none;\r\n        text-align: left;\r\n        &:hover,\r\n        &:focus {\r\n          box-shadow: 0 0px 3px #50a3b9;\r\n          border: 1px solid #50a3b9;\r\n        }\r\n      }\r\n      &.danger {\r\n        input {\r\n          border-color: red;\r\n        }\r\n      }\r\n      .danger {\r\n        color: red;\r\n      }\r\n    }\r\n  }\r\n  .md-login-footer {\r\n    .btn-login {\r\n      background-color: #50a3b9;\r\n      width: 50%;\r\n      margin: 0 auto;\r\n      text-align: center;\r\n      color: white;\r\n      border-radius: 15px;\r\n      padding: 5px;\r\n      cursor: pointer;\r\n      transition: all 0.4s;\r\n      &:hover {\r\n        transform: scale(1.05);\r\n      }\r\n    }\r\n  }\r\n  .md-login-signup {\r\n    text-align: center;\r\n    span {\r\n      cursor: pointer;\r\n      color: #73b7c9;\r\n      :hover {\r\n        color: #50a3b9;\r\n      }\r\n    }\r\n  }\r\n  .md-login-switch {\r\n    position: absolute;\r\n    width: 100%;\r\n    padding: 5px;\r\n    bottom: 0;\r\n    background: #188754;\r\n    text-align: center;\r\n    color: white;\r\n    cursor: pointer;\r\n    span:before {\r\n      background-color: white;\r\n    }\r\n    &-text {\r\n      position: relative;\r\n      z-index: 1;\r\n    }\r\n    &-effect {\r\n      width: 0;\r\n      height: 3px;\r\n      left: 50%;\r\n      bottom: 0;\r\n      position: absolute;\r\n      background-color: #50a3b9;\r\n      transition: all 0.5s;\r\n    }\r\n    &:hover {\r\n      .md-login-switch-effect {\r\n        width: 50%;\r\n        left: 25%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst VerifyModal = ({ onLogin, onRegister, auth, visible, onSubmit }) => {\r\n  console.log(auth, \"auth\");\r\n  const [state, _setState] = useState({\r\n    isLogin: true,\r\n  });\r\n  const setState = (data) => {\r\n    _setState((pre) => ({ ...pre, ...data }));\r\n  };\r\n\r\n  const onChange = (key) => (e) => {\r\n    setState({ [key]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const { username, password, fullName, password2 } = state;\r\n    setState({ isSubmit: true });\r\n    console.log(state, \"state\");\r\n    if (!username || !password) {\r\n      return;\r\n    }\r\n    if ((!fullName || !password2) && !state.isLogin) {\r\n      return;\r\n    }\r\n    if (password !== password2 && !state.isLogin) {\r\n      toast.error(\"Mật khẩu không đúng! Vui lòng kiểm tra lại\");\r\n      return;\r\n    }\r\n    const callApi = state.isLogin ? onLogin : onRegister;\r\n    const body = { username, password, ...(state.isLogin ? {} : { fullName }) };\r\n    callApi(body).then(() => {\r\n      if (state.isLogin) {\r\n        setState({ visible: false });\r\n      } else {\r\n        setState({ isLogin: true });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal visible={visible} height={200}>\r\n      <WrapperLogin>\r\n        <div className=\"md-login-header\">Xác thực</div>\r\n        <div className=\"md-login-body\">\r\n          <div\r\n            className={`md-login-body-input ${\r\n              state.isSubmit && !state.password ? \"danger\" : \"\"\r\n            }`}\r\n          >\r\n            <input\r\n              type=\"password\"\r\n              onChange={onChange(\"password\")}\r\n              placeholder=\"Password\"\r\n            ></input>\r\n            {state.isSubmit && !state.password && (\r\n              <div className=\"danger\">Vui lòng nhập password</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"md-login-footer\">\r\n          <div\r\n            className=\"btn-login\"\r\n            onClick={() => onSubmit({ password: state.password })}\r\n          >\r\n            Xác nhận\r\n          </div>\r\n        </div>\r\n      </WrapperLogin>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ auth: { auth } }) => ({ auth }),\r\n  ({ auth: { onLogin, onRegister } }) => ({ onLogin, onRegister })\r\n)(VerifyModal);\r\n","D:\\project-react\\react-js-friend-chat\\src\\views\\public\\setting\\loginSecure\\list.js",[],"D:\\project-react\\react-js-friend-chat\\src\\views\\public\\setting\\loginSecure\\styled.js",[],"D:\\project-react\\react-js-friend-chat\\src\\views\\public\\map\\MapComponent.js",[],"D:\\project-react\\react-js-friend-chat\\src\\data-access\\file-provider.js",[],"D:\\project-react\\react-js-friend-chat\\src\\views\\public\\home\\components\\post.js",["513","514"],"D:\\project-react\\react-js-friend-chat\\src\\utils\\data-cache.js",[],"D:\\project-react\\react-js-friend-chat\\src\\data-access\\auth-provider.js",[],"D:\\project-react\\react-js-friend-chat\\src\\redux\\models\\base-store.js",[],"D:\\project-react\\react-js-friend-chat\\src\\data-access\\device-info-provider.js",[],"D:\\project-react\\react-js-friend-chat\\src\\redux\\models\\socket\\action.js",[],"D:\\project-react\\react-js-friend-chat\\src\\data-access\\room-provider.js",[],"D:\\project-react\\react-js-friend-chat\\src\\data-access\\message-provider.js",[],"D:\\project-react\\react-js-friend-chat\\src\\data-access\\account-provider.js",[],"D:\\project-react\\react-js-friend-chat\\src\\data-access\\post-provider.js",[],"D:\\project-react\\react-js-friend-chat\\src\\layouts\\sidebar\\index.js",[],"D:\\project-react\\react-js-friend-chat\\src\\views\\public\\home\\components\\input-comment.js",[],"D:\\project-react\\react-js-friend-chat\\src\\views\\public\\home\\components\\styled.js",[],"D:\\project-react\\react-js-friend-chat\\src\\data-access\\base-provider.js",[],"D:\\project-react\\react-js-friend-chat\\src\\constants\\index.js",[],"D:\\project-react\\react-js-friend-chat\\src\\layouts\\sidebar\\styled.js",[],{"ruleId":"515","severity":1,"message":"516","line":4,"column":25,"nodeType":"517","messageId":"518","endLine":4,"endColumn":33},{"ruleId":"519","severity":1,"message":"520","line":11,"column":6,"nodeType":"521","endLine":11,"endColumn":8,"suggestions":"522"},{"ruleId":"523","replacedBy":"524"},{"ruleId":"525","replacedBy":"526"},{"ruleId":"519","severity":1,"message":"527","line":17,"column":6,"nodeType":"521","endLine":17,"endColumn":12,"suggestions":"528"},{"ruleId":"515","severity":1,"message":"529","line":17,"column":10,"nodeType":"517","messageId":"518","endLine":17,"endColumn":15},{"ruleId":"515","severity":1,"message":"530","line":17,"column":17,"nodeType":"517","messageId":"518","endLine":17,"endColumn":25},{"ruleId":"519","severity":1,"message":"531","line":20,"column":6,"nodeType":"521","endLine":20,"endColumn":20,"suggestions":"532"},{"ruleId":"533","severity":1,"message":"534","line":85,"column":1,"nodeType":"535","messageId":"536","endLine":90,"endColumn":2},{"ruleId":"533","severity":1,"message":"537","line":91,"column":1,"nodeType":"535","messageId":"536","endLine":100,"endColumn":2},{"ruleId":"515","severity":1,"message":"538","line":2,"column":9,"nodeType":"517","messageId":"518","endLine":2,"endColumn":15},{"ruleId":"539","severity":1,"message":"540","line":14,"column":1,"nodeType":"541","endLine":113,"endColumn":3},{"ruleId":"515","severity":1,"message":"529","line":9,"column":10,"nodeType":"517","messageId":"518","endLine":9,"endColumn":15},{"ruleId":"519","severity":1,"message":"542","line":19,"column":6,"nodeType":"521","endLine":19,"endColumn":8,"suggestions":"543"},{"ruleId":"544","severity":1,"message":"545","line":25,"column":9,"nodeType":"546","endLine":25,"endColumn":54},{"ruleId":"544","severity":1,"message":"545","line":61,"column":9,"nodeType":"546","endLine":61,"endColumn":54},{"ruleId":"515","severity":1,"message":"547","line":8,"column":9,"nodeType":"517","messageId":"518","endLine":8,"endColumn":15},{"ruleId":"515","severity":1,"message":"548","line":5,"column":10,"nodeType":"517","messageId":"518","endLine":5,"endColumn":15},{"ruleId":"515","severity":1,"message":"549","line":5,"column":17,"nodeType":"517","messageId":"518","endLine":5,"endColumn":31},{"ruleId":"515","severity":1,"message":"550","line":7,"column":8,"nodeType":"517","messageId":"518","endLine":7,"endColumn":17},{"ruleId":"515","severity":1,"message":"551","line":9,"column":8,"nodeType":"517","messageId":"518","endLine":9,"endColumn":23},{"ruleId":"519","severity":1,"message":"552","line":32,"column":6,"nodeType":"521","endLine":32,"endColumn":8,"suggestions":"553"},{"ruleId":"515","severity":1,"message":"554","line":33,"column":9,"nodeType":"517","messageId":"518","endLine":33,"endColumn":21},{"ruleId":"515","severity":1,"message":"555","line":36,"column":9,"nodeType":"517","messageId":"518","endLine":36,"endColumn":22},{"ruleId":"556","severity":1,"message":"557","line":51,"column":17,"nodeType":"546","endLine":51,"endColumn":51},{"ruleId":"556","severity":1,"message":"557","line":75,"column":17,"nodeType":"546","endLine":75,"endColumn":58},{"ruleId":"556","severity":1,"message":"557","line":101,"column":13,"nodeType":"546","endLine":101,"endColumn":54},{"ruleId":"558","severity":1,"message":"559","line":133,"column":27,"nodeType":"560","messageId":"536","endLine":133,"endColumn":29},{"ruleId":"556","severity":1,"message":"557","line":146,"column":13,"nodeType":"546","endLine":146,"endColumn":130},{"ruleId":"556","severity":1,"message":"557","line":159,"column":19,"nodeType":"546","endLine":159,"endColumn":67},{"ruleId":"556","severity":1,"message":"557","line":177,"column":21,"nodeType":"546","endLine":177,"endColumn":55},{"ruleId":"539","severity":1,"message":"540","line":4,"column":1,"nodeType":"541","endLine":84,"endColumn":3},{"ruleId":"558","severity":1,"message":"559","line":70,"column":29,"nodeType":"560","messageId":"536","endLine":70,"endColumn":31},{"ruleId":"539","severity":1,"message":"540","line":4,"column":1,"nodeType":"541","endLine":20,"endColumn":3},{"ruleId":"539","severity":1,"message":"540","line":3,"column":1,"nodeType":"541","endLine":13,"endColumn":3},{"ruleId":"539","severity":1,"message":"540","line":14,"column":1,"nodeType":"541","endLine":319,"endColumn":3},{"ruleId":"558","severity":1,"message":"561","line":120,"column":25,"nodeType":"560","messageId":"536","endLine":120,"endColumn":27},{"ruleId":"558","severity":1,"message":"561","line":131,"column":25,"nodeType":"560","messageId":"536","endLine":131,"endColumn":27},{"ruleId":"558","severity":1,"message":"561","line":142,"column":23,"nodeType":"560","messageId":"536","endLine":142,"endColumn":25},{"ruleId":"558","severity":1,"message":"561","line":145,"column":27,"nodeType":"560","messageId":"536","endLine":145,"endColumn":29},{"ruleId":"558","severity":1,"message":"561","line":150,"column":24,"nodeType":"560","messageId":"536","endLine":150,"endColumn":26},{"ruleId":"558","severity":1,"message":"561","line":163,"column":25,"nodeType":"560","messageId":"536","endLine":163,"endColumn":27},{"ruleId":"558","severity":1,"message":"561","line":171,"column":24,"nodeType":"560","messageId":"536","endLine":171,"endColumn":26},{"ruleId":"558","severity":1,"message":"561","line":186,"column":25,"nodeType":"560","messageId":"536","endLine":186,"endColumn":27},{"ruleId":"558","severity":1,"message":"561","line":194,"column":24,"nodeType":"560","messageId":"536","endLine":194,"endColumn":26},{"ruleId":"558","severity":1,"message":"561","line":197,"column":27,"nodeType":"560","messageId":"536","endLine":197,"endColumn":29},{"ruleId":"515","severity":1,"message":"562","line":1,"column":8,"nodeType":"517","messageId":"518","endLine":1,"endColumn":13},{"ruleId":"515","severity":1,"message":"563","line":134,"column":9,"nodeType":"517","messageId":"518","endLine":134,"endColumn":28},{"ruleId":"558","severity":1,"message":"561","line":139,"column":64,"nodeType":"560","messageId":"536","endLine":139,"endColumn":66},{"ruleId":"564","severity":1,"message":"565","line":107,"column":26,"nodeType":"566","messageId":"536","endLine":107,"endColumn":28},{"ruleId":"515","severity":1,"message":"530","line":109,"column":9,"nodeType":"517","messageId":"518","endLine":109,"endColumn":17},{"ruleId":"556","severity":1,"message":"557","line":54,"column":20,"nodeType":"546","endLine":54,"endColumn":54},{"ruleId":"556","severity":1,"message":"557","line":72,"column":19,"nodeType":"546","endLine":72,"endColumn":57},{"ruleId":"558","severity":1,"message":"559","line":80,"column":27,"nodeType":"560","messageId":"536","endLine":80,"endColumn":29},{"ruleId":"556","severity":1,"message":"557","line":85,"column":17,"nodeType":"546","endLine":91,"endColumn":19},{"ruleId":"556","severity":1,"message":"557","line":105,"column":17,"nodeType":"546","endLine":105,"endColumn":60},{"ruleId":"539","severity":1,"message":"567","line":4,"column":1,"nodeType":"541","endLine":85,"endColumn":4},{"ruleId":"539","severity":1,"message":"540","line":4,"column":1,"nodeType":"541","endLine":6,"endColumn":3},{"ruleId":"539","severity":1,"message":"540","line":6,"column":1,"nodeType":"541","endLine":40,"endColumn":3},{"ruleId":"539","severity":1,"message":"540","line":5,"column":1,"nodeType":"541","endLine":60,"endColumn":3},{"ruleId":"539","severity":1,"message":"540","line":6,"column":1,"nodeType":"541","endLine":44,"endColumn":3},{"ruleId":"539","severity":1,"message":"540","line":4,"column":1,"nodeType":"541","endLine":6,"endColumn":3},{"ruleId":"539","severity":1,"message":"567","line":4,"column":1,"nodeType":"541","endLine":74,"endColumn":4},{"ruleId":"519","severity":1,"message":"520","line":11,"column":6,"nodeType":"521","endLine":11,"endColumn":8,"suggestions":"568"},{"ruleId":"515","severity":1,"message":"529","line":17,"column":10,"nodeType":"517","messageId":"518","endLine":17,"endColumn":15},{"ruleId":"515","severity":1,"message":"530","line":17,"column":17,"nodeType":"517","messageId":"518","endLine":17,"endColumn":25},{"ruleId":"519","severity":1,"message":"531","line":20,"column":6,"nodeType":"521","endLine":20,"endColumn":20,"suggestions":"569"},{"ruleId":"533","severity":1,"message":"534","line":85,"column":1,"nodeType":"535","messageId":"536","endLine":90,"endColumn":2},{"ruleId":"533","severity":1,"message":"537","line":91,"column":1,"nodeType":"535","messageId":"536","endLine":100,"endColumn":2},{"ruleId":"515","severity":1,"message":"570","line":157,"column":9,"nodeType":"517","messageId":"518","endLine":157,"endColumn":13},{"ruleId":"515","severity":1,"message":"538","line":2,"column":9,"nodeType":"517","messageId":"518","endLine":2,"endColumn":15},{"ruleId":"539","severity":1,"message":"540","line":14,"column":1,"nodeType":"541","endLine":114,"endColumn":3},{"ruleId":"519","severity":1,"message":"552","line":33,"column":6,"nodeType":"521","endLine":33,"endColumn":8,"suggestions":"571"},{"ruleId":"515","severity":1,"message":"554","line":34,"column":9,"nodeType":"517","messageId":"518","endLine":34,"endColumn":21},{"ruleId":"515","severity":1,"message":"555","line":37,"column":9,"nodeType":"517","messageId":"518","endLine":37,"endColumn":22},{"ruleId":"556","severity":1,"message":"557","line":95,"column":17,"nodeType":"546","endLine":95,"endColumn":51},{"ruleId":"515","severity":1,"message":"572","line":103,"column":24,"nodeType":"517","messageId":"518","endLine":103,"endColumn":28},{"ruleId":"556","severity":1,"message":"557","line":120,"column":17,"nodeType":"546","endLine":120,"endColumn":58},{"ruleId":"556","severity":1,"message":"557","line":146,"column":13,"nodeType":"546","endLine":146,"endColumn":54},{"ruleId":"556","severity":1,"message":"557","line":191,"column":23,"nodeType":"546","endLine":195,"endColumn":25},{"ruleId":"558","severity":1,"message":"561","line":201,"column":71,"nodeType":"560","messageId":"536","endLine":201,"endColumn":73},{"ruleId":"558","severity":1,"message":"559","line":216,"column":29,"nodeType":"560","messageId":"536","endLine":216,"endColumn":31},{"ruleId":"556","severity":1,"message":"557","line":247,"column":13,"nodeType":"546","endLine":247,"endColumn":130},{"ruleId":"556","severity":1,"message":"557","line":260,"column":19,"nodeType":"546","endLine":260,"endColumn":67},{"ruleId":"556","severity":1,"message":"557","line":278,"column":21,"nodeType":"546","endLine":278,"endColumn":55},{"ruleId":"515","severity":1,"message":"573","line":2,"column":28,"nodeType":"517","messageId":"518","endLine":2,"endColumn":36},{"ruleId":"519","severity":1,"message":"542","line":18,"column":6,"nodeType":"521","endLine":18,"endColumn":8,"suggestions":"574"},{"ruleId":"544","severity":1,"message":"545","line":23,"column":9,"nodeType":"546","endLine":23,"endColumn":54},{"ruleId":"544","severity":1,"message":"545","line":59,"column":9,"nodeType":"546","endLine":59,"endColumn":54},{"ruleId":"519","severity":1,"message":"575","line":21,"column":6,"nodeType":"521","endLine":21,"endColumn":18,"suggestions":"576"},{"ruleId":"515","severity":1,"message":"547","line":8,"column":9,"nodeType":"517","messageId":"518","endLine":8,"endColumn":15},{"ruleId":"515","severity":1,"message":"548","line":3,"column":10,"nodeType":"517","messageId":"518","endLine":3,"endColumn":15},{"ruleId":"556","severity":1,"message":"557","line":54,"column":20,"nodeType":"546","endLine":54,"endColumn":54},{"ruleId":"556","severity":1,"message":"557","line":66,"column":17,"nodeType":"546","endLine":75,"endColumn":19},{"ruleId":"556","severity":1,"message":"557","line":90,"column":21,"nodeType":"546","endLine":90,"endColumn":59},{"ruleId":"558","severity":1,"message":"559","line":98,"column":29,"nodeType":"560","messageId":"536","endLine":98,"endColumn":31},{"ruleId":"556","severity":1,"message":"557","line":103,"column":19,"nodeType":"546","endLine":109,"endColumn":21},{"ruleId":"556","severity":1,"message":"557","line":124,"column":17,"nodeType":"546","endLine":124,"endColumn":60},{"ruleId":"515","severity":1,"message":"562","line":1,"column":8,"nodeType":"517","messageId":"518","endLine":1,"endColumn":13},{"ruleId":"515","severity":1,"message":"577","line":122,"column":9,"nodeType":"517","messageId":"518","endLine":122,"endColumn":21},{"ruleId":"515","severity":1,"message":"563","line":134,"column":9,"nodeType":"517","messageId":"518","endLine":134,"endColumn":28},{"ruleId":"558","severity":1,"message":"561","line":139,"column":64,"nodeType":"560","messageId":"536","endLine":139,"endColumn":66},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onLogin'. Either include it or remove the dependency array. If 'onLogin' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["578"],"no-native-reassign",["579"],"no-negated-in-lhs",["580"],"React Hook useEffect has a missing dependency: 'connect'. Either include it or remove the dependency array.",["581"],"'state' is assigned a value but never used.","'setState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'createCalendar'. Either include it or remove the dependency array.",["582"],"no-extend-native","Number prototype is read only, properties should not be added.","AssignmentExpression","unexpected","String prototype is read only, properties should not be added.","'domain' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'getlistBaiViet'. Either include it or remove the dependency array. If 'getlistBaiViet' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["583"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'center' is assigned a value but never used.","'toast' is defined but never used.","'ToastContainer' is defined but never used.","'AuthModal' is defined but never used.","'CreateRoomModal' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllUser'. Either include it or remove the dependency array. If 'getAllUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["584"],"'handleCreate' is assigned a value but never used.","'handleAddUser' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Expected '!==' and instead saw '!='.","'React' is defined but never used.","'handleDeleteComment' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","Assign arrow function to a variable before exporting as module default",["585"],["586"],"'html' is assigned a value but never used.",["587"],"'file' is assigned a value but never used.","'useState' is defined but never used.",["588"],"React Hook useEffect has a missing dependency: 'getCurrentUser'. Either include it or remove the dependency array. If 'getCurrentUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["589"],"'handleSubmit' is assigned a value but never used.",{"desc":"590","fix":"591"},"no-global-assign","no-unsafe-negation",{"desc":"592","fix":"593"},{"desc":"594","fix":"595"},{"desc":"596","fix":"597"},{"desc":"598","fix":"599"},{"desc":"590","fix":"600"},{"desc":"594","fix":"601"},{"desc":"598","fix":"602"},{"desc":"596","fix":"603"},{"desc":"604","fix":"605"},"Update the dependencies array to be: [onLogin]",{"range":"606","text":"607"},"Update the dependencies array to be: [auth, connect]",{"range":"608","text":"609"},"Update the dependencies array to be: [createCalendar, listSchedule]",{"range":"610","text":"611"},"Update the dependencies array to be: [getlistBaiViet]",{"range":"612","text":"613"},"Update the dependencies array to be: [getAllUser]",{"range":"614","text":"615"},{"range":"616","text":"607"},{"range":"617","text":"611"},{"range":"618","text":"615"},{"range":"619","text":"613"},"Update the dependencies array to be: [deviceInfo, getCurrentUser]",{"range":"620","text":"621"},[326,328],"[onLogin]",[515,521],"[auth, connect]",[689,703],"[createCalendar, listSchedule]",[594,596],"[getlistBaiViet]",[867,869],"[getAllUser]",[326,328],[689,703],[837,839],[560,562],[582,594],"[deviceInfo, getCurrentUser]"]